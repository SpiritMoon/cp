!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACK_AUTH	Common.h	/^const UINT8 ACK_AUTH      = 0x04;   \/\/Client<-----Server  Server AC设备对Portal Server请求认证报文的响应报文$/;"	v
ACK_CHALLENGE	Common.h	/^const UINT8 ACK_CHALLENGE = 0x02;   \/\/Client<-----Server  Server AC设备对Portal Server请求Challeng报文的响应报文$/;"	v
ACK_INFO	Common.h	/^const UINT8 ACK_INFO      = 0x0a;   \/\/Server --> Client   信息询问的应答报文$/;"	v
ACK_LOGOUT	Common.h	/^const UINT8 ACK_LOGOUT    = 0x06;   \/\/Client<-----Server  Server AC设备对Portal Server请求下线报文的响应报文  $/;"	v
AFF_ACK_AUTH	Common.h	/^const UINT8 AFF_ACK_AUTH  = 0x07;   \/\/Client----->Server  Server  Portal Server对收到的认证成功响应报文的确认报文$/;"	v
BIT_ISSET	UtilFunc.h	29;"	d
CODE.cpp	makefile	/^CODE.cpp = Portal.cpp \\$/;"	m
CPP.o	makefile	/^CPP.o = $(CODE.cpp:.cpp=.o)$/;"	m
Challenge	Common.h	/^const UINT8 Challenge       = 0x03;        \/\/16（固定） Chap方式加密的魔术字$/;"	v
ChapPassWord	Common.h	/^const UINT8 ChapPassWord    = 0x04;        \/\/16（固定）  经过Chap方式加密后的密码$/;"	v
CreateTCPSocket	SocketFunc.cpp	/^bool CreateTCPSocket(int &sockfd)$/;"	f
CreateUDPSock	SocketFunc.cpp	/^bool CreateUDPSock(int &sockfd)$/;"	f
FLAGS	makefile	/^FLAGS = -g -Wall $(INCLUDE)$/;"	m
GCC	makefile	/^GCC = g++$/;"	m
INCLUDE	makefile	/^INCLUDE = -I.\/ -I..\/include$/;"	m
LIBDIR	makefile	/^LIBDIR = -L -lltime -L..\/lib -lktstd -L\/usr\/lib64 -L\/usr\/local\/lib -lz -lm -lcrypto$/;"	m
NTF_LOGOUT	Common.h	/^const UINT8 NTF_LOGOUT    = 0x08;   \/\/Server --> Client   Client 用户被强制下线通知报文 $/;"	v
OBJS.o	makefile	/^OBJS.o = $(CPP.o)$/;"	m
PORTAL_IP_LEN	Common.h	11;"	d
PORTAL_MAC_LEN	Common.h	12;"	d
PORTAL_PASSWORD_LEN	Common.h	10;"	d
PORTAL_USERNAME_LEN	Common.h	9;"	d
PassWord	Common.h	/^const UINT8 PassWord        = 0x02;        \/\/<=16（可变） 用户提交的明文密码$/;"	v
REQ_AUTH	Common.h	/^const UINT8 REQ_AUTH      = 0x03;   \/\/Client----->Server  Server Portal Server向AC设备发送的请求认证报文$/;"	v
REQ_CHALLENGE	Common.h	/^const UINT8 REQ_CHALLENGE = 0x01;   \/\/Client----->Server  Portal Server 向AC设备发送的请求Challeng报文$/;"	v
REQ_INFO	Common.h	/^const UINT8 REQ_INFO      = 0x09;   \/\/Client --> Server   信息询问报文 $/;"	v
REQ_LOGOUT	Common.h	/^const UINT8 REQ_LOGOUT    = 0x05;   \/\/Client----->Server  Server  若ErrCode字段值为0x00，表示此报文是Portal Server向AC设备发送的请求用户下线报文；$/;"	v
ST_PORTAL_AC	Common.h	/^}ST_PORTAL_AC;$/;"	t	typeref:struct:portal_ac
ST_PORTAL_AC_ATTR	Common.h	/^}ST_PORTAL_AC_ATTR;$/;"	t	typeref:struct:portal_ac_attr
ST_REQ_AUTH	Common.h	/^}ST_REQ_AUTH;$/;"	t	typeref:struct:req_auth
ST_REQ_MAC_QUERY	Common.h	/^}ST_REQ_MAC_QUERY;$/;"	t	typeref:struct:req_mac_query
SendReqAuthAndRecv	Portal.cpp	/^int SendReqAuthAndRecv(const ST_REQ_AUTH& req_auth, const char* ac_ip, const int port)$/;"	f
SendReqLogoutAndRecv	Portal.cpp	/^int SendReqLogoutAndRecv(const char* userip, const char* ac_ip, const int port)$/;"	f
TARGET	makefile	/^TARGET = libPortal.so$/;"	m
UserName	Common.h	/^const UINT8 UserName        = 0x01;        \/\/<=253 （可变） 用 户 名$/;"	v
_CMCC_COMMON_H_	Common.h	2;"	d
_GLOBAL_H	Global.h	15;"	d
_SOCKETFUNC_H	SocketFunc.h	15;"	d
_UTILFUNC_H	UtilFunc.h	15;"	d
__PORTAL_H__	Portal.h	15;"	d
ac_attr	Common.h	/^	char ac_attr[512];$/;"	m	struct:portal_ac
acip	Common.h	/^    char acip[PORTAL_IP_LEN]; $/;"	m	struct:req_mac_query
attrNum	Common.h	/^	UINT8 attrNum;		\/\/ 表示其后边可变长度的属性字段属性的个数，长度为 1 字节$/;"	m	struct:portal_ac
attrVal	Common.h	/^	UINT8 attrVal[253];$/;"	m	struct:portal_ac_attr
errCode	Common.h	/^	UINT8 errCode;		\/\/ ErrCode字段和Type字段一起表示一定的意义，长度为 1字节$/;"	m	struct:portal_ac
g_ACPort	Portal.cpp	/^int g_ACPort = 11111;$/;"	v
g_ACPort	recv.cpp	/^int g_ACPort = 11111;$/;"	v
g_Log	recv.cpp	/^CKTLog g_Log;$/;"	v
g_Log	send.cpp	/^CKTLog g_Log;$/;"	v
generateSerialNo	Portal.cpp	/^unsigned short generateSerialNo()$/;"	f
intIp_to_strIp	UtilFunc.cpp	/^string intIp_to_strIp(unsigned int pIp)$/;"	f
len	Common.h	/^	UINT8 len;$/;"	m	struct:portal_ac_attr
main	recv.cpp	/^int main()$/;"	f
main	send.cpp	/^int main(int argc ,char* argv[])$/;"	f
msleep	UtilFunc.h	28;"	d
name	Common.h	/^    char name[PORTAL_USERNAME_LEN];$/;"	m	struct:req_auth
pap_chap	Common.h	/^	UINT8 pap_chap;		\/\/ 认证方式，长度为 1 字节$/;"	m	struct:portal_ac
password	Common.h	/^	char password[PORTAL_PASSWORD_LEN];\/\/查询到的用户登录密码$/;"	m	struct:req_mac_query
password	Common.h	/^    char password[PORTAL_PASSWORD_LEN];$/;"	m	struct:req_auth
portal_ac	Common.h	/^	portal_ac()$/;"	f	struct:portal_ac
portal_ac	Common.h	/^typedef struct portal_ac$/;"	s
portal_ac_attr	Common.h	/^typedef struct portal_ac_attr$/;"	s
print_usage	send.cpp	/^void print_usage(int type)$/;"	f
reqID	Common.h	/^	UINT16 reqID;		\/\/ 2个字节，由AC设备随机生成$/;"	m	struct:portal_ac
req_auth	Common.h	/^    req_auth()$/;"	f	struct:req_auth
req_auth	Common.h	/^typedef struct req_auth$/;"	s
req_mac_query	Common.h	/^    req_mac_query()$/;"	f	struct:req_mac_query
req_mac_query	Common.h	/^typedef struct req_mac_query$/;"	s
rsv	Common.h	/^	UINT8 rsv;			\/\/ 保留字段，长度为 1 字节，在所有报文中值为 0$/;"	m	struct:portal_ac
serial	Common.h	/^	int serial;$/;"	m	struct:req_mac_query
serialNo	Common.h	/^	UINT16 serialNo;	\/\/ 报文的序列号，长度为 2 字节$/;"	m	struct:portal_ac
setNonBlock	SocketFunc.cpp	/^bool setNonBlock(int sockfd)$/;"	f
stat	Common.h	/^	int stat;\/\/=1:查询到已存在  =0:没有查询到  =-1:执行查询失败$/;"	m	struct:req_mac_query
strIp_to_intIp	UtilFunc.cpp	/^unsigned int strIp_to_intIp(string pIp)$/;"	f
tcpRead	SocketFunc.cpp	/^int tcpRead(int socket, unsigned char *pucMsg, int slLen)$/;"	f
tcpSend	SocketFunc.cpp	/^int tcpSend(int socket, unsigned char *pucMsg, int slLen)$/;"	f
type	Common.h	/^	UINT8 type;			\/\/ 报文的类型，长度为 1 字节$/;"	m	struct:portal_ac
type	Common.h	/^	UINT8 type;$/;"	m	struct:portal_ac_attr
udpReadFrom	SocketFunc.cpp	/^int udpReadFrom(int socket, unsigned char *rcvBuf, int slLen)$/;"	f
udpSendTo	SocketFunc.cpp	/^int udpSendTo(int socket, string strIp, int port, unsigned char *sendBuf, int slLen)$/;"	f
userIP	Common.h	/^	UINT32 userIP;		\/\/ Portal用户的IP地址，长度为 4 字节，其值由Portal Server根据其获得的IP地址填写$/;"	m	struct:portal_ac
userName	Common.h	/^	char userName[PORTAL_USERNAME_LEN];\/\/查询到的登录用户名$/;"	m	struct:req_mac_query
userPort	Common.h	/^	UINT16 userPort;	\/\/ UserPort字段目前没有用到，长度为 2 字节，在所有报文中其值为0$/;"	m	struct:portal_ac
userip	Common.h	/^    char userip[PORTAL_IP_LEN];$/;"	m	struct:req_auth
userip	Common.h	/^    char userip[PORTAL_IP_LEN];$/;"	m	struct:req_mac_query
usermac	Common.h	/^    char usermac[PORTAL_MAC_LEN];$/;"	m	struct:req_mac_query
ver	Common.h	/^	UINT8 ver;			\/\/ 协议的版本号，长度为 1 字节，目前定义的值为 0x01$/;"	m	struct:portal_ac
