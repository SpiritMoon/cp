!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACACDIR	wt/Rules.mk	/^ACACDIR=$(WTDIR)\/acac$/;"	m
ACK_AUTH	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 ACK_AUTH      = 0x04;   \/\/Client<-----Server  Server AC…Ë±∏∂‘Portal Server«Î«Û»œ÷§±®ŒƒµƒœÏ”¶±®Œƒ$/;"	v
ACK_AUTH	header.h	101;"	d
ACK_CHALLENGE	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 ACK_CHALLENGE = 0x02;   \/\/Client<-----Server  Server AC…Ë±∏∂‘Portal Server«Î«ÛChalleng±®ŒƒµƒœÏ”¶±®Œƒ$/;"	v
ACK_CHALLENGE	header.h	99;"	d
ACK_INFO	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 ACK_INFO      = 0x0a;   \/\/Server --> Client   –≈œ¢—ØŒ µƒ”¶¥±®Œƒ$/;"	v
ACK_INFO	header.h	108;"	d
ACK_LOGOUT	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 ACK_LOGOUT    = 0x06;   \/\/Client<-----Server  Server AC…Ë±∏∂‘Portal Server«Î«Ûœ¬œﬂ±®ŒƒµƒœÏ”¶±®Œƒ  $/;"	v
ACK_LOGOUT	header.h	104;"	d
AC_CMD_CTRLCMD	wt/header.h	486;"	d
AC_CMD_CTRLCMD_ACK	wt/header.h	487;"	d
AC_CMD_DOWNLOAD_APINFO	wt/header.h	484;"	d
AC_CMD_DOWNLOAD_APINFO_ACK	wt/header.h	485;"	d
AC_CMD_LOGIN	wt/header.h	480;"	d
AC_CMD_LOGIN_ACK	wt/header.h	481;"	d
AC_CMD_MAX	wt/header.h	492;"	d
AC_CMD_PROXY_QUEST	wt/header.h	488;"	d
AC_CMD_PROXY_QUEST_ACK	wt/header.h	489;"	d
AC_CMD_UPLOAD_ACINFO	wt/header.h	490;"	d
AC_CMD_UPLOAD_ACINFO_ACK	wt/header.h	491;"	d
AC_CMD_UPLOAD_APINFO	wt/header.h	482;"	d
AC_CMD_UPLOAD_APINFO_ACK	wt/header.h	483;"	d
AC_CONF_FLAG_base	wt/header.h	/^	AC_CONF_FLAG_base=1,			\/\/ Ë°®Á§∫ap‰ø°ÊÅØÁöÑbase_infoÊúâ‰øÆÊîπ$/;"	e	enum:__anon2
AC_CONF_FLAG_dhcp	wt/header.h	/^	AC_CONF_FLAG_dhcp=2,			\/\/ Ë°®Á§∫ap‰ø°ÊÅØÁöÑdhcp_infoÊúâ‰øÆÊîπ$/;"	e	enum:__anon2
AC_CONF_FLAG_wifi_base	wt/header.h	/^	AC_CONF_FLAG_wifi_base=4,		\/\/ Ë°®Á§∫ap‰ø°ÊÅØÁöÑwifi_base_infoÊúâ‰øÆÊîπ$/;"	e	enum:__anon2
AC_CONF_FLAG_wifi_wds	wt/header.h	/^	AC_CONF_FLAG_wifi_wds=8,		\/\/ Ë°®Á§∫ap‰ø°ÊÅØÁöÑwifi_wds_infoÊúâ‰øÆÊîπ$/;"	e	enum:__anon2
AC_LOGIN_BLACK	wt/header.h	/^	AC_LOGIN_BLACK		=0xA0,  \/\/ ÈöèÊú∫ID ÈîôËØØÔºåÈùûÊ≥ï‰ΩøÁî®$/;"	e	enum:ac_login_state
AC_LOGIN_ERRPWD	wt/header.h	/^	AC_LOGIN_ERRPWD		=0x03,  \/\/ ÂØÜÁ†ÅÈîôËØØ$/;"	e	enum:ac_login_state
AC_LOGIN_ILLEGAL	wt/header.h	/^	AC_LOGIN_ILLEGAL	=0x05,  \/\/ ÈöèÊú∫ID ÈîôËØØÔºåÈùûÊ≥ï‰ΩøÁî®$/;"	e	enum:ac_login_state
AC_LOGIN_LOGGED	wt/header.h	/^	AC_LOGIN_LOGGED		=0x04,  \/\/ Ë¥¶Âè∑Â∑≤ÁôªÂΩï$/;"	e	enum:ac_login_state
AC_LOGIN_LOGINOK	wt/header.h	/^	AC_LOGIN_LOGINOK	=0x07,  \/\/ ÁôªÈôÜÊàêÂäü$/;"	e	enum:ac_login_state
AC_LOGIN_NOUSER	wt/header.h	/^	AC_LOGIN_NOUSER		=0x02,  \/\/ Ê≤°ÊúâËØ•Áî®Êà∑$/;"	e	enum:ac_login_state
AFF_ACK_AUTH	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 AFF_ACK_AUTH  = 0x07;   \/\/Client----->Server  Server  Portal Server∂‘ ’µΩµƒ»œ÷§≥…π¶œÏ”¶±®Œƒµƒ»∑»œ±®Œƒ$/;"	v
AFF_ACK_AUTH	header.h	105;"	d
AG_CONN_FAIL_ERR	wt/header.h	291;"	d
AG_CONN_FAIL_ISOK	wt/header.h	289;"	d
AG_CONN_FAIL_NONE	wt/header.h	288;"	d
AG_CONN_FAIL_SQL	wt/header.h	290;"	d
AG_CONN_FAIL_TIME	wt/header.h	287;"	d
AG_CONN_SUCC	wt/header.h	286;"	d
AG_HEAD_HEAD	wt/header.h	270;"	d
AG_PASS	wt/header.h	269;"	d
AUTHENTICATEDIR	wt/Rules.mk	/^AUTHENTICATEDIR=$(WTDIR)\/authenticate$/;"	m
BG_BOSS_ADDR	wt/header.h	355;"	d
BG_HEAD_HEAD	wt/header.h	354;"	d
BG_HEAD_VER	wt/header.h	352;"	d
BG_HEAD_VER_1	wt/header.h	353;"	d
BG_NUM_FLAG_TOTAL	wt/header.h	384;"	d
BG_NUM_FLAG_TYPE	wt/header.h	385;"	d
BG_PORT	wt/header.h	357;"	d
BG_ROUTER_ADD	wt/header.h	468;"	d
BG_ROUTER_DEL	wt/header.h	469;"	d
BIN_DIR	wt/Rules.mk	/^BIN_DIR=\/mx$/;"	m
BIT_ISSET	cmcc_portal/cmcc_portal/UtilFunc.h	29;"	d
BOSSDIR	wt/Rules.mk	/^BOSSDIR=$(WTDIR)\/boss$/;"	m
BOSS_DEBUG	wt/ss.c	9;"	d	file:
BOSS_PROCESS_THREAD	wt/ss.c	/^void* BOSS_PROCESS_THREAD(void* fd)$/;"	f
BOSS_SOCKFD	wt/ss.c	/^static int		BOSS_SOCKFD;						\/\/ ‰∏ébossËøûÊé•ÁöÑBOSS_SOCKFD$/;"	v	file:
CC	Makefile	/^CC=gcc$/;"	m
CC	wt/Rules.mk	/^CC=gcc$/;"	m
CODE.cpp	cmcc_portal/cmcc_portal/makefile	/^CODE.cpp = Portal.cpp \\$/;"	m
CONFIG_FILE_NAME	header.h	14;"	d
CONFIG_FILE_NAME	wt/header.h	14;"	d
CONN_BOSS	wt/ss.c	/^int CONN_BOSS()$/;"	f
CPP.o	cmcc_portal/cmcc_portal/makefile	/^CPP.o = $(CODE.cpp:.cpp=.o)$/;"	m
CThread_pool	wt/pool.c	/^} CThread_pool;$/;"	t	typeref:struct:__anon3	file:
CThread_worker	wt/pool.c	/^} CThread_worker;$/;"	t	typeref:struct:worker	file:
Challenge	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 Challenge       = 0x03;        \/\/16£®πÃ∂®£© Chap∑Ω Ωº”√‹µƒƒß ı◊÷$/;"	v
Challenge	header.h	114;"	d
ChapPassWord	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 ChapPassWord    = 0x04;        \/\/16£®πÃ∂®£©  æ≠π˝Chap∑Ω Ωº”√‹∫Ûµƒ√‹¬Î$/;"	v
ChapPassWord	header.h	115;"	d
CreateTCPSocket	cmcc_portal/cmcc_portal/SocketFunc.cpp	/^bool CreateTCPSocket(int &sockfd)$/;"	f
CreateUDPSock	cmcc_portal/cmcc_portal/SocketFunc.cpp	/^bool CreateUDPSock(int &sockfd)$/;"	f
CreateUDPSock	portal.c	/^int CreateUDPSock(int *sockfd)$/;"	f
DAILY_REPORT_THREAD	wt/time_task.c	/^void* DAILY_REPORT_THREAD(void *fd)$/;"	f
DEPEND	Makefile	/^DEPEND=main.o logs.o net.o server_mutual.o portal.o cJSON.o$/;"	m
ERROR_NONE	wt/header.h	/^	ERROR_NONE			=0x01,  \/\/ Êú™Áü•ÈîôËØØ$/;"	e	enum:ac_login_state
F	wt/encode.c	85;"	d	file:
FF	wt/encode.c	93;"	d	file:
FLAGS	cmcc_portal/cmcc_portal/makefile	/^FLAGS = -g -Wall $(INCLUDE)$/;"	m
G	wt/encode.c	86;"	d	file:
GACDIR	wt/Rules.mk	/^GACDIR=$(WTDIR)\/gac$/;"	m
GCC	cmcc_portal/cmcc_portal/makefile	/^GCC = g++$/;"	m
GET_MD5	wt/encode.c	/^void GET_MD5(char *in, unsigned int len, char *out)$/;"	f
GET_MD5	wt/encode.c	14;"	d	file:
GG	wt/encode.c	94;"	d	file:
GUIDEDIR	wt/Rules.mk	/^GUIDEDIR=$(WTDIR)\/guide$/;"	m
GUIDE_HEADER_H	wt/guide_header.h	7;"	d
H	wt/encode.c	87;"	d	file:
HH	wt/encode.c	95;"	d	file:
I	wt/encode.c	88;"	d	file:
II	wt/encode.c	96;"	d	file:
INCLUDE	cmcc_portal/cmcc_portal/makefile	/^INCLUDE = -I.\/ -I..\/include$/;"	m
INCLUDE	wt/Rules.mk	/^INCLUDE=-I$(PUBDIR)$/;"	m
INIT_LIST_HEAD	wt/list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
INVALID_DATA_CLEAN_THREAD	wt/time_task.c	/^void* INVALID_DATA_CLEAN_THREAD(void *fd)$/;"	f
IS_CONN_BOSS	wt/guide_header.h	12;"	d
LIB	Makefile	/^LIB=-lpthread -lm$/;"	m
LIBDIR	cmcc_portal/cmcc_portal/makefile	/^LIBDIR = -L -lltime -L..\/lib -lktstd -L\/usr\/lib64 -L\/usr\/local\/lib -lz -lm -lcrypto$/;"	m
LIST_HEAD	wt/list.h	22;"	d
LIST_HEAD_INIT	wt/list.h	20;"	d
LOGS_MAX_SIZE	header.h	9;"	d
LOGS_MAX_SIZE	wt/header.h	9;"	d
LOG_LAST_TO_LOG_THREAD	wt/time_task.c	/^void* LOG_LAST_TO_LOG_THREAD(void *fd)$/;"	f
LOG_METASTASIS_THREAD	wt/time_task.c	/^void* LOG_METASTASIS_THREAD(void *fd)$/;"	f
LY_BIT_CODE	wt/encode.c	/^void LY_BIT_CODE(char *buf, unsigned int len, int flag)$/;"	f
LY_BIT_CODE	wt/encode.c	13;"	d	file:
LY_BYTE_CODE	wt/encode.c	/^int LY_BYTE_CODE(char* version, char* buf, unsigned int len, int flag)$/;"	f
LY_BYTE_CODE	wt/encode.c	12;"	d	file:
MAKE	Makefile	/^MAKE=make$/;"	m
MAKE	wt/Rules.mk	/^MAKE=make$/;"	m
MANAGEMENTDIR	wt/Rules.mk	/^MANAGEMENTDIR=$(WTDIR)\/management$/;"	m
MAX_EPOLL_NUM	header.h	12;"	d
MAX_EPOLL_NUM	wt/header.h	12;"	d
MD5_MSG_RESOLOVE	wt/encode.c	/^int MD5_MSG_RESOLOVE(char* version, char* md5_msg, int md5_len, char *msg, int *len)$/;"	f
MONDAY	wt/time_task.c	1154;"	d	file:
NTF_LOGOUT	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 NTF_LOGOUT    = 0x08;   \/\/Server --> Client   Client ”√ªß±ª«ø÷∆œ¬œﬂÕ®÷™±®Œƒ $/;"	v
NTF_LOGOUT	header.h	106;"	d
OBJS.o	cmcc_portal/cmcc_portal/makefile	/^OBJS.o = $(CPP.o)$/;"	m
ODBCLIB	wt/Rules.mk	/^ODBCLIB=-lodbc$/;"	m
ONCE_METASTASIS_LOG_NUM	wt/time_task.c	382;"	d	file:
PASS_ARRAY	wt/encode.c	/^char PASS_ARRAY[6][10] = {$/;"	v
PASS_ARRAY	wt/encode.c	10;"	d	file:
PMKCachePeriod	wt/header.h	/^	unsigned short	PMKCachePeriod;			\/\/PMKÁºìÂ≠òÂë®Êúü(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_wpa_key_st
PORTAL_IP_LEN	cmcc_portal/cmcc_portal/Common.h	11;"	d
PORTAL_IP_LEN	header.h	143;"	d
PORTAL_MAC_LEN	cmcc_portal/cmcc_portal/Common.h	12;"	d
PORTAL_MAC_LEN	header.h	144;"	d
PORTAL_PASSWORD_LEN	cmcc_portal/cmcc_portal/Common.h	10;"	d
PORTAL_PASSWORD_LEN	header.h	142;"	d
PORTAL_TO_AC_PORT	header.h	23;"	d
PORTAL_USERNAME_LEN	cmcc_portal/cmcc_portal/Common.h	9;"	d
PORTAL_USERNAME_LEN	header.h	141;"	d
PP	wt/encode.c	91;"	d	file:
PRINT_USER_LOG	header.h	16;"	d
PRINT_USER_LOG	wt/header.h	18;"	d
PROBEDIR	wt/Rules.mk	/^PROBEDIR=$(WTDIR)\/probe$/;"	m
PTHREADLIB	wt/Rules.mk	/^PTHREADLIB=-lpthread -lm$/;"	m
PUBDIR	wt/Rules.mk	/^PUBDIR=$(WTDIR)\/pub$/;"	m
PUBLIC_DEPEND	Makefile	/^PUBLIC_DEPEND=$(PUBDIR)\/*.o$/;"	m
PUBLIC_DEPEND	wt/Rules.mk	/^PUBLIC_DEPEND=$(PUBDIR)\/*.o$/;"	m
PassWord	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 PassWord        = 0x02;        \/\/<=16£®ø…±‰£© ”√ªßÃ·Ωªµƒ√˜Œƒ√‹¬Î$/;"	v
PassWord	header.h	113;"	d
PreAuthentication	wt/header.h	/^	unsigned short	PreAuthentication;		\/\/È¢ÑËÆ§ËØÅ0:ÂÖ≥Èó≠1:ÊâìÂºÄ(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_wpa_key_st
RECV_BOSS_DATA	wt/ss.c	/^int RECV_BOSS_DATA(int *len, unsigned int recv_time)$/;"	f
RECV_CANUSE_NUM	wt/ss.c	/^int RECV_CANUSE_NUM(int len)$/;"	f
RECV_ROUTER	wt/ss.c	/^int RECV_ROUTER(int len)$/;"	f
REQ_AUTH	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 REQ_AUTH      = 0x03;   \/\/Client----->Server  Server Portal ServerœÚAC…Ë±∏∑¢ÀÕµƒ«Î«Û»œ÷§±®Œƒ$/;"	v
REQ_AUTH	header.h	100;"	d
REQ_CHALLENGE	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 REQ_CHALLENGE = 0x01;   \/\/Client----->Server  Portal Server œÚAC…Ë±∏∑¢ÀÕµƒ«Î«ÛChalleng±®Œƒ$/;"	v
REQ_CHALLENGE	header.h	98;"	d
REQ_INFO	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 REQ_INFO      = 0x09;   \/\/Client --> Server   –≈œ¢—ØŒ ±®Œƒ $/;"	v
REQ_INFO	header.h	107;"	d
REQ_LOGOUT	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 REQ_LOGOUT    = 0x05;   \/\/Client----->Server  Server  »ÙErrCode◊÷∂Œ÷µŒ™0x00£¨±Ì æ¥À±®Œƒ «Portal ServerœÚAC…Ë±∏∑¢ÀÕµƒ«Î«Û”√ªßœ¬œﬂ±®Œƒ£ª$/;"	v
REQ_LOGOUT	header.h	102;"	d
RESERVE_DAYS	wt/time_task.c	383;"	d	file:
RL	wt/encode.c	89;"	d	file:
RTS_ADD	wt/rts.c	/^void RTS_ADD(char* name, unsigned int num)$/;"	f
RTS_CLEAN	wt/rts.c	/^void RTS_CLEAN()$/;"	f
RTS_NUM_PROCESS	wt/rts.c	/^int RTS_NUM_PROCESS(char* name, unsigned int curr_num)$/;"	f
SAUTHENTICATEDIR	wt/Rules.mk	/^SAUTHENTICATEDIR=$(WTDIR)\/sauthenticate$/;"	m
SEND_BASIS_SN	wt/ss.c	/^int SEND_BASIS_SN(int php_sockfd)$/;"	f
SEND_BOSSS_MSG_OF_MD5	wt/encode.c	/^int SEND_BOSSS_MSG_OF_MD5(char* version, int sockfd, char* buf, int len)$/;"	f
SEND_DAILY_REPORT	wt/ss.c	/^int SEND_DAILY_REPORT()$/;"	f
SEND_HEART	wt/ss.c	/^int SEND_HEART()$/;"	f
SEND_RTS	wt/ss.c	/^int SEND_RTS()$/;"	f
SEND_SHANGHU	wt/ss.c	/^int SEND_SHANGHU()$/;"	f
SEND_SHANGHU_PART	wt/ss.c	/^int SEND_SHANGHU_PART(char* buf, int num)$/;"	f
SERVER_MUTUAL_DEBUG	server_mutual.c	8;"	d	file:
SGUIDEDIR	wt/Rules.mk	/^SGUIDEDIR=$(WTDIR)\/sguide$/;"	m
SHANGHU_ONCE_NUM	wt/header.h	358;"	d
SOCK_STAT_ADD	header.h	17;"	d
SOCK_STAT_ADD	wt/header.h	20;"	d
SOCK_STAT_ADDED	header.h	18;"	d
SOCK_STAT_ADDED	wt/header.h	21;"	d
SOCK_STAT_DEL	header.h	19;"	d
SOCK_STAT_DEL	wt/header.h	22;"	d
SOURCE	Makefile	/^SOURCE=main.c logs.c net.c server_mutual.c portal.c cJSON.c$/;"	m
SOURCE	wt/Makefile	/^SOURCE=utils.c sql.c net.c logs.c ini.c pool.c cJSON.c ac_utils.c encode.c order.c$/;"	m
STATISCITS_DEBUG	wt/time_task.c	8;"	d	file:
STATISTICS_THREAD	wt/time_task.c	/^void* STATISTICS_THREAD(void *fd)$/;"	f
STMPDIR	wt/Rules.mk	/^STMPDIR=$(WTDIR)\/stmp$/;"	m
ST_PORTAL_AC	cmcc_portal/cmcc_portal/Common.h	/^}ST_PORTAL_AC;$/;"	t	typeref:struct:portal_ac
ST_PORTAL_AC	header.h	/^}ST_PORTAL_AC;$/;"	t	typeref:struct:portal_ac
ST_PORTAL_AC_ATTR	cmcc_portal/cmcc_portal/Common.h	/^}ST_PORTAL_AC_ATTR;$/;"	t	typeref:struct:portal_ac_attr
ST_PORTAL_AC_ATTR	header.h	/^}ST_PORTAL_AC_ATTR;$/;"	t	typeref:struct:portal_ac_attr
ST_REQ_AUTH	cmcc_portal/cmcc_portal/Common.h	/^}ST_REQ_AUTH;$/;"	t	typeref:struct:req_auth
ST_REQ_AUTH	header.h	/^}ST_REQ_AUTH;$/;"	t	typeref:struct:req_auth
ST_REQ_MAC_QUERY	cmcc_portal/cmcc_portal/Common.h	/^}ST_REQ_MAC_QUERY;$/;"	t	typeref:struct:req_mac_query
ST_REQ_MAC_QUERY	header.h	/^}ST_REQ_MAC_QUERY;$/;"	t	typeref:struct:req_mac_query
SendReqAuthAndRecv	cmcc_portal/cmcc_portal/Portal.cpp	/^int SendReqAuthAndRecv(const ST_REQ_AUTH& req_auth, const char* ac_ip, const int port)$/;"	f
SendReqAuthAndRecv	portal.c	/^int SendReqAuthAndRecv(ST_REQ_AUTH *req_auth, char* ac_ip, int port)$/;"	f
SendReqLogoutAndRecv	cmcc_portal/cmcc_portal/Portal.cpp	/^int SendReqLogoutAndRecv(const char* userip, const char* ac_ip, const int port)$/;"	f
SendReqLogoutAndRecv	portal.c	/^int SendReqLogoutAndRecv(char* userip, char* ac_ip, int port)$/;"	f
TARGET	Makefile	/^TARGET=cp.out$/;"	m
TARGET	cmcc_portal/cmcc_portal/makefile	/^TARGET = libPortal.so$/;"	m
TESTDIR	wt/Rules.mk	/^TESTDIR=$(WTDIR)\/test$/;"	m
TFREE_DEBUG	wt/time_task.c	110;"	d	file:
TFREE_THREAD	wt/time_task.c	/^void* TFREE_THREAD(void *fd)$/;"	f
UserName	cmcc_portal/cmcc_portal/Common.h	/^const UINT8 UserName        = 0x01;        \/\/<=253 £®ø…±‰£© ”√ ªß √˚$/;"	v
UserName	header.h	112;"	d
VERSION_ARRAY	wt/encode.c	/^const char* VERSION_ARRAY[1] = {"5.1.17"};$/;"	v
VERSION_ARRAY	wt/encode.c	9;"	d	file:
WRITE_LOG	header.h	10;"	d
WRITE_LOG	wt/header.h	10;"	d
WTDIR	wt/Rules.mk	/^WTDIR=$(CURDIR)$/;"	m
WT_HEADER_H	header.h	7;"	d
WT_HEADER_H	wt/header.h	7;"	d
WT_SQL_ERROR	header.h	15;"	d
WT_SQL_ERROR	wt/header.h	16;"	d
_CMCC_COMMON_H_	cmcc_portal/cmcc_portal/Common.h	2;"	d
_GLOBAL_H	cmcc_portal/cmcc_portal/Global.h	15;"	d
_LINUX_LIST_H	wt/list.h	2;"	d
_SOCKETFUNC_H	cmcc_portal/cmcc_portal/SocketFunc.h	15;"	d
_UTILFUNC_H	cmcc_portal/cmcc_portal/UtilFunc.h	15;"	d
__PORTAL_H__	cmcc_portal/cmcc_portal/Portal.h	15;"	d
__list_add	wt/list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_del	wt/list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__u16	wt/header.h	/^typedef unsigned short __u16;$/;"	t
__u32	wt/header.h	/^typedef unsigned int __u32;$/;"	t
__u8	wt/header.h	/^typedef unsigned char __u8;$/;"	t
ac_ap_base_conf_st	wt/header.h	/^struct ac_ap_base_conf_st$/;"	s
ac_ap_conf_st	wt/header.h	/^struct ac_ap_conf_st$/;"	s
ac_ap_dhcp_conf_st	wt/header.h	/^struct ac_ap_dhcp_conf_st$/;"	s
ac_ap_user_st	wt/header.h	/^struct ac_ap_user_st$/;"	s
ac_ap_wifi_base_conf_st	wt/header.h	/^struct ac_ap_wifi_base_conf_st$/;"	s
ac_ap_wifi_base_list_st	wt/header.h	/^struct ac_ap_wifi_base_list_st$/;"	s
ac_ap_wifi_wds_conf_st	wt/header.h	/^struct ac_ap_wifi_wds_conf_st$/;"	s
ac_ap_wifi_wds_list_st	wt/header.h	/^struct ac_ap_wifi_wds_list_st$/;"	s
ac_attr	cmcc_portal/cmcc_portal/Common.h	/^	char ac_attr[512];$/;"	m	struct:portal_ac
ac_attr	header.h	/^	char ac_attr[512];$/;"	m	struct:portal_ac
ac_base_info_st	wt/header.h	/^struct ac_base_info_st$/;"	s
ac_head_st	wt/header.h	/^typedef struct ac_head_st$/;"	s
ac_head_st	wt/header.h	/^}ac_head_st;\/\/36Â≠óËäÇ$/;"	t	typeref:struct:ac_head_st
ac_id	wt/header.h	/^	__u32 ac_id;			\/\/ ÊéßÂà∂ËÆæÂ§áÁöÑdeviceID$/;"	m	struct:ac_proxy_st
ac_login_st	wt/header.h	/^typedef struct ac_login_st$/;"	s
ac_login_st	wt/header.h	/^}ac_login_st;$/;"	t	typeref:struct:ac_login_st
ac_login_state	wt/header.h	/^enum ac_login_state{$/;"	g
ac_proxy_st	wt/header.h	/^typedef struct ac_proxy_st$/;"	s
ac_proxy_st	wt/header.h	/^}ac_proxy_st;$/;"	t	typeref:struct:ac_proxy_st
ac_state_st	wt/header.h	/^typedef struct ac_state_st$/;"	s
ac_state_st	wt/header.h	/^}ac_state_st;$/;"	t	typeref:struct:ac_state_st
ac_wep_key_st	wt/header.h	/^struct ac_wep_key_st$/;"	s
ac_wpa_key_st	wt/header.h	/^struct ac_wpa_key_st$/;"	s
acip	cmcc_portal/cmcc_portal/Common.h	/^    char acip[PORTAL_IP_LEN]; $/;"	m	struct:req_mac_query
acip	header.h	/^    char acip[PORTAL_IP_LEN]; $/;"	m	struct:req_mac_query
addr	ac_recv.c	/^	struct sockaddr_in addr;$/;"	v	typeref:struct:sockaddr_in
addr	wt/header.h	/^	__u8  addr[128];				\/\/ ËÆæÂ§áÂú∞ÂùÄ$/;"	m	struct:ac_base_info_st
addr	wt/header.h	/^	unsigned char  addr[30];		\/\/ ÈõÜ‰∏≠ÁÆ°ÁêÜÊúçÂä°Âô®Âú∞ÂùÄ	$/;"	m	struct:addr_set_st
addr_len	ac_recv.c	/^	socklen_t addr_len = sizeof(cli_addr);$/;"	v
addr_set_st	wt/header.h	/^typedef struct addr_set_st$/;"	s
addr_set_st	wt/header.h	/^}addr_set_st;$/;"	t	typeref:struct:addr_set_st
address	wt/header.h	/^		char			address[256];$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
ag_ac_change	wt/header.h	/^	ag_ac_change,					\/\/18 ac‰øÆÊîπ$/;"	e	enum:ag_enum
ag_authenticate	wt/header.h	/^	ag_authenticate,				\/\/1 ËÆ§ËØÅÊúçÂä°Âô®ËøûÊé•$/;"	e	enum:ag_enum
ag_authenticate_res	wt/header.h	/^	ag_authenticate_res,			\/\/2 ËÆ§ËØÅÊúçÂä°Âô®ËøûÊé•ËøîÂõû$/;"	e	enum:ag_enum
ag_enum	wt/header.h	/^enum ag_enum$/;"	g
ag_get_stat_report	wt/header.h	/^	ag_get_stat_report,				\/\/5 Ëé∑ÂèñÁä∂ÊÄÅÊä•Âëä$/;"	e	enum:ag_enum
ag_gg_change	wt/header.h	/^	ag_gg_change,					\/\/8 ÂØåÂ™í‰ΩìÊõ¥Êîπ$/;"	e	enum:ag_enum
ag_mac_online	wt/header.h	/^	ag_mac_online,					\/\/19 mac‰∏äÁ∫ø ÂÖÅËÆ∏‰∏äÁΩë$/;"	e	enum:ag_enum
ag_mac_takeout	wt/header.h	/^	ag_mac_takeout,					\/\/18 macË∏¢Âá∫$/;"	e	enum:ag_enum
ag_max	wt/header.h	/^	ag_max,$/;"	e	enum:ag_enum
ag_msg_conn	wt/header.h	/^typedef struct ag_msg_conn{$/;"	s
ag_msg_conn	wt/header.h	/^}ag_msg_conn;$/;"	t	typeref:struct:ag_msg_conn
ag_msg_conn_res	wt/header.h	/^typedef struct ag_msg_conn_res{$/;"	s
ag_msg_conn_res	wt/header.h	/^}ag_msg_conn_res;$/;"	t	typeref:struct:ag_msg_conn_res
ag_msg_head	wt/header.h	/^typedef struct ag_msg_head{$/;"	s
ag_msg_head	wt/header.h	/^}ag_msg_head;$/;"	t	typeref:struct:ag_msg_head
ag_msg_mac	wt/header.h	/^typedef struct ag_msg_mac{$/;"	s
ag_msg_mac	wt/header.h	/^}ag_msg_mac;$/;"	t	typeref:struct:ag_msg_mac
ag_msg_router	wt/header.h	/^typedef struct ag_msg_router{$/;"	s
ag_msg_router	wt/header.h	/^}ag_msg_router;$/;"	t	typeref:struct:ag_msg_router
ag_msg_stat	wt/header.h	/^typedef struct ag_msg_stat{$/;"	s
ag_msg_stat	wt/header.h	/^}ag_msg_stat;$/;"	t	typeref:struct:ag_msg_stat
ag_other_change	wt/header.h	/^	ag_other_change,				\/\/10 ÂÖ∂‰ªñÂèÇÊï∞Êõ¥Êîπ$/;"	e	enum:ag_enum
ag_router_cache	wt/header.h	/^	ag_router_cache,				\/\/13 ‰øÆÊîπÂÜÖÂ≠òÁºìÂ≠ò$/;"	e	enum:ag_enum
ag_router_cacheusb	wt/header.h	/^	ag_router_cacheusb,				\/\/14 ‰øÆÊîπusbÁºìÂ≠ò$/;"	e	enum:ag_enum
ag_router_disconn	wt/header.h	/^	ag_router_disconn,				\/\/12 ÈáçÊñ∞ËøûÊé•$/;"	e	enum:ag_enum
ag_router_keyword	wt/header.h	/^	ag_router_keyword,				\/\/16 ‰øÆÊîπËøáÊª§ÂÖ≥ÈîÆËØç$/;"	e	enum:ag_enum
ag_router_restart	wt/header.h	/^	ag_router_restart,				\/\/17 ÈáçÂêØ$/;"	e	enum:ag_enum
ag_router_update	wt/header.h	/^	ag_router_update,				\/\/11 ËÆæÂ§áÂçáÁ∫ß$/;"	e	enum:ag_enum
ag_router_wireless	wt/header.h	/^	ag_router_wireless,				\/\/15 ‰øÆÊîπÊó†Á∫ø$/;"	e	enum:ag_enum
ag_stat_report	wt/header.h	/^	ag_stat_report,					\/\/6 Áä∂ÊÄÅÊä•Âëä$/;"	e	enum:ag_enum
ag_third	wt/header.h	/^	ag_third,						\/\/3 Á¨¨‰∏âÊñπÁ®ãÂ∫èËøûÊé•$/;"	e	enum:ag_enum
ag_third_res	wt/header.h	/^	ag_third_res,					\/\/4 Á¨¨‰∏âÊñπÁ®ãÂ∫èËøûÊé•ËøîÂõû$/;"	e	enum:ag_enum
ag_unknow	wt/header.h	/^	ag_unknow = 0,$/;"	e	enum:ag_enum
ag_upurl_change	wt/header.h	/^	ag_upurl_change,                \/\/9 ÂçáÁ¥öÂú∞ÂùÄÊõ¥Êîπ$/;"	e	enum:ag_enum
ag_white_change	wt/header.h	/^	ag_white_change,				\/\/7 ÁôΩÂêçÂçïÊõ¥Êîπ$/;"	e	enum:ag_enum
ap	wt/header.h	/^	struct ac_ap_conf_st ap[0];		\/\/ count‰∏™apÁöÑÊï∞ÊçÆ$/;"	m	struct:ac_state_st	typeref:struct:ac_state_st::ac_ap_conf_st
ap_bssid	wt/header.h	/^	__u8  ap_bssid[6];		\/\/ ËÆæÂ§áÁöÑMAC$/;"	m	struct:ac_ap_base_conf_st
ap_id	wt/header.h	/^	__u32 ap_id;			\/\/ ÊéßÂà∂ËÆæÂ§á‰∏ãÈù¢ÁöÑAPÁöÑdevice_id$/;"	m	struct:ac_proxy_st
ap_info	wt/header.h	/^	__u8  ap_info[32];		\/\/ Âè¶ÂÆÉ‰ø°ÊÅØ$/;"	m	struct:ac_ap_base_conf_st
ap_mode	wt/header.h	/^	__u8 ap_mode;			\/\/ APÊ®°Âºè0:ÊôÆÈÄöAPÊ®°Âºè,2:Ê°•Êé•Ê®°Âºè3:‰∏≠ÁªßÊ®°Âºè4:Ëá™Â≠¶‰π†Ê®°Âºè$/;"	m	struct:ac_ap_base_conf_st
ap_name	wt/header.h	/^	__u8  ap_name[32];		\/\/ ËÆæÂ§áÊ†áËØÜ(Êï∞Â≠óËã±Êñá‰∏≠Êñá)$/;"	m	struct:ac_ap_base_conf_st
ap_num	wt/header.h	/^		unsigned int	ap_num;$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
ap_online_num	wt/header.h	/^	unsigned int	ap_online_num;$/;"	m	struct:bg_heart_msg
ap_power	wt/header.h	/^	__u8 ap_power;			\/\/ ÂèëÂ∞ÑÂäüÁéá(1-100)$/;"	m	struct:ac_ap_base_conf_st
ap_total_num	wt/header.h	/^	unsigned int	ap_total_num;$/;"	m	struct:bg_heart_msg
ap_total_num	wt/header.h	/^	unsigned int ap_total_num;$/;"	m	struct:bg_daily_msg
ap_version	wt/header.h	/^	__u8  ap_version[32];	\/\/ AP ÁâàÊú¨‰ø°ÊÅØ$/;"	m	struct:ac_ap_base_conf_st
ap_yo_num	wt/header.h	/^	unsigned int ap_yo_num;$/;"	m	struct:bg_daily_msg
arg	wt/pool.c	/^    void			*arg;						\/\/ ÂõûË∞ÉÂáΩÊï∞ÁöÑÂèÇÊï∞$/;"	m	struct:worker	file:
atime	wt/header.h	/^	__u8  atime[50];		\/\/ Á≥ªÁªüÂêØÂä®Âà∞Áé∞Âú®ÁöÑÊó∂Èó¥Ôºà‰ª•Áßí‰∏∫Âçï‰ΩçÔºâ$/;"	m	struct:ac_ap_base_conf_st
attrNum	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 attrNum;		\/\/ ±Ì æ∆‰∫Û±ﬂø…±‰≥§∂»µƒ Ù–‘◊÷∂Œ Ù–‘µƒ∏ˆ ˝£¨≥§∂»Œ™ 1 ◊÷Ω⁄$/;"	m	struct:portal_ac
attrNum	header.h	/^	unsigned char attrNum;		\/\/ Ë°®Á§∫ÂÖ∂ÂêéËæπÂèØÂèòÈïøÂ∫¶ÁöÑÂ±ûÊÄßÂ≠óÊÆµÂ±ûÊÄßÁöÑ‰∏™Êï∞ÔºåÈïøÂ∫¶‰∏∫ 1 Â≠óËäÇ$/;"	m	struct:portal_ac
attrVal	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 attrVal[253];$/;"	m	struct:portal_ac_attr
attrVal	header.h	/^	unsigned char attrVal[253];$/;"	m	struct:portal_ac_attr
auth_code	wt/guide_header.h	/^	unsigned int auth_code;$/;"	m	struct:authenticate_node
auth_code	wt/header.h	/^	unsigned int auth_code;				\/\/ ËÆ§ËØÅÊúçÂä°Âô®‰ª£Á†Å$/;"	m	struct:ag_msg_conn_res
auth_srv	wt/header.h	/^	__u8	auth_srv[64];			\/\/ ËÆ§ËØÅÊúçÂä°Âô®Âú∞ÂùÄ,ÊØîÂ¶Ç: www.auth_srv.com:8080$/;"	m	struct:cer_msg_st
authenticate_node	wt/guide_header.h	/^typedef struct authenticate_node{$/;"	s
authenticate_node	wt/guide_header.h	/^}authenticate_node;$/;"	t	typeref:struct:authenticate_node
authenticate_stat	wt/guide_header.h	/^typedef struct authenticate_stat{$/;"	s
authenticate_stat	wt/guide_header.h	/^}authenticate_stat;$/;"	t	typeref:struct:authenticate_stat
balanced	wt/header.h	/^	__u8 balanced:4;		\/\/ ÂùáË°°ÊùÉÂÄº,0:ÂÖ≥Èó≠1:Áî®Êà∑Êï∞,2:‰ø°Âè∑Âº∫Â∫¶,3:ÊµÅÈáè$/;"	m	struct:ac_ap_wifi_base_list_st
base_info	wt/header.h	/^	struct ac_ap_base_conf_st		base_info;			\/\/ APÂü∫Êú¨‰ø°ÊÅØ$/;"	m	struct:ac_ap_conf_st	typeref:struct:ac_ap_conf_st::ac_ap_base_conf_st
baseinfo	wt/header.h	/^	struct ac_base_info_st	baseinfo;	\/\/ ÂÆ¢Êà∑Á´Ø‰∏éÊúçÂä°Á´ØÂêåÊ≠•$/;"	m	struct:ac_login_st	typeref:struct:ac_login_st::ac_base_info_st
bg_canuse_num	wt/header.h	/^	bg_canuse_num,			\/\/2 ÊúçÂä°Âô®ËøûÊé•ËøîÂõû ËÆæÂ§áÊï∞Èáè‰∏ãÂèë$/;"	e	enum:bg_enum
bg_conn_msg	wt/header.h	/^typedef struct bg_conn_msg$/;"	s
bg_conn_msg	wt/header.h	/^}bg_conn_msg;$/;"	t	typeref:struct:bg_conn_msg
bg_daily_msg	wt/header.h	/^typedef struct bg_daily_msg$/;"	s
bg_daily_msg	wt/header.h	/^}bg_daily_msg;$/;"	t	typeref:struct:bg_daily_msg
bg_daily_report	wt/header.h	/^	bg_daily_report,		\/\/8 Êó•Êä•Ë°®$/;"	e	enum:bg_enum
bg_enum	wt/header.h	/^enum bg_enum$/;"	g
bg_get_shanghu	wt/header.h	/^	bg_get_shanghu,			\/\/6 Ëé∑ÂèñÂïÜÊà∑$/;"	e	enum:bg_enum
bg_get_shebei_type	wt/header.h	/^	bg_get_shebei_type,		\/\/4 Ëé∑ÂèñËÆæÂ§áÁ±ªÂûã$/;"	e	enum:bg_enum
bg_get_sn	wt/header.h	/^	bg_get_sn,				\/\/9 Ëé∑ÂèñsnÂè∑$/;"	e	enum:bg_enum
bg_guide	wt/header.h	/^	bg_guide,				\/\/1 ÊúçÂä°Âô®ËøûÊé• && ÂèëÈÄÅÂπ≥Âè∞‰ø°ÊÅØ Â∞§ÂÖ∂ÊòØsnÂè∑$/;"	e	enum:bg_enum
bg_heart	wt/header.h	/^	bg_heart,				\/\/3 ÂøÉË∑≥$/;"	e	enum:bg_enum
bg_heart_msg	wt/header.h	/^typedef struct bg_heart_msg$/;"	s
bg_heart_msg	wt/header.h	/^}bg_heart_msg;$/;"	t	typeref:struct:bg_heart_msg
bg_max	wt/header.h	/^	bg_max,$/;"	e	enum:bg_enum
bg_msg_head	wt/header.h	/^typedef struct bg_msg_head$/;"	s
bg_msg_head	wt/header.h	/^}bg_msg_head;$/;"	t	typeref:struct:bg_msg_head
bg_msg_rt_num	wt/header.h	/^	struct bg_msg_rt_num{$/;"	s	struct:bg_num_msg
bg_num_msg	wt/header.h	/^typedef struct bg_num_msg$/;"	s
bg_num_msg	wt/header.h	/^}bg_num_msg;$/;"	t	typeref:struct:bg_num_msg
bg_router	wt/header.h	/^	bg_router,				\/\/10 ËÆæÂ§áÊìç‰Ωú$/;"	e	enum:bg_enum
bg_router_msg	wt/header.h	/^typedef struct bg_router_msg$/;"	s
bg_router_msg	wt/header.h	/^}bg_router_msg;$/;"	t	typeref:struct:bg_router_msg
bg_rt_node	wt/header.h	/^	struct bg_rt_node$/;"	s	struct:bg_rts_msg
bg_rts_msg	wt/header.h	/^typedef struct bg_rts_msg$/;"	s
bg_rts_msg	wt/header.h	/^}bg_rts_msg;$/;"	t	typeref:struct:bg_rts_msg
bg_shanghu	wt/header.h	/^	bg_shanghu,				\/\/7 ÂïÜÊà∑‰∏äÊä•$/;"	e	enum:bg_enum
bg_shanghu_msg	wt/header.h	/^typedef struct bg_shanghu_msg$/;"	s
bg_shanghu_msg	wt/header.h	/^}bg_shanghu_msg;$/;"	t	typeref:struct:bg_shanghu_msg
bg_shanghu_node	wt/header.h	/^	struct bg_shanghu_node$/;"	s	struct:bg_shanghu_msg
bg_shebei_type	wt/header.h	/^	bg_shebei_type,			\/\/5 ËÆæÂ§áÁ±ªÂûã ËÆæÂ§áÁ±ªÂûã‰∏äÊä•$/;"	e	enum:bg_enum
bg_unknow	wt/header.h	/^	bg_unknow = 0,$/;"	e	enum:bg_enum
big_little16	wt/utils.c	/^void inline big_little16(__u16 *num)$/;"	f
big_little32	wt/utils.c	/^void inline big_little32(__u32 *num)$/;"	f
buffers_mem	wt/guide_header.h	/^	unsigned int buffers_mem;$/;"	m	struct:authenticate_node
buffers_mem	wt/guide_header.h	/^	unsigned int buffers_mem;$/;"	m	struct:authenticate_stat
buffers_mem	wt/header.h	/^	unsigned int buffers_mem;$/;"	m	struct:ag_msg_stat
cJSON	cJSON.h	/^typedef struct cJSON {$/;"	s
cJSON	cJSON.h	/^} cJSON;$/;"	t	typeref:struct:cJSON
cJSON_AddFalseToObject	cJSON.h	121;"	d
cJSON_AddItemReferenceToArray	cJSON.c	/^void	cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)						{cJSON_AddItemToArray(array,create_reference(item));}$/;"	f
cJSON_AddItemReferenceToObject	cJSON.c	/^void	cJSON_AddItemReferenceToObject(cJSON *object,const char *string,cJSON *item)	{cJSON_AddItemToObject(object,string,create_reference(item));}$/;"	f
cJSON_AddItemToArray	cJSON.c	/^void   cJSON_AddItemToArray(cJSON *array, cJSON *item)						{cJSON *c=array->child;if (!item) return; if (!c) {array->child=item;} else {while (c && c->next) c=c->next; suffix_object(c,item);}}$/;"	f
cJSON_AddItemToObject	cJSON.c	/^void   cJSON_AddItemToObject(cJSON *object,const char *string,cJSON *item)	{if (!item) return; if (item->string) cJSON_free(item->string);item->string=cJSON_strdup(string);cJSON_AddItemToArray(object,item);}$/;"	f
cJSON_AddNullToObject	cJSON.h	119;"	d
cJSON_AddNumberToObject	cJSON.h	122;"	d
cJSON_AddStringToObject	cJSON.h	123;"	d
cJSON_AddTrueToObject	cJSON.h	120;"	d
cJSON_Array	cJSON.h	39;"	d
cJSON_CreateArray	cJSON.c	/^cJSON *cJSON_CreateArray()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_Array;return item;}$/;"	f
cJSON_CreateBool	cJSON.c	/^cJSON *cJSON_CreateBool(int b)					{cJSON *item=cJSON_New_Item();if(item)item->type=b?cJSON_True:cJSON_False;return item;}$/;"	f
cJSON_CreateDoubleArray	cJSON.c	/^cJSON *cJSON_CreateDoubleArray(double *numbers,int count)		{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateFalse	cJSON.c	/^cJSON *cJSON_CreateFalse()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_False;return item;}$/;"	f
cJSON_CreateFloatArray	cJSON.c	/^cJSON *cJSON_CreateFloatArray(float *numbers,int count)			{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateIntArray	cJSON.c	/^cJSON *cJSON_CreateIntArray(int *numbers,int count)				{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateNull	cJSON.c	/^cJSON *cJSON_CreateNull()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_NULL;return item;}$/;"	f
cJSON_CreateNumber	cJSON.c	/^cJSON *cJSON_CreateNumber(double num)			{cJSON *item=cJSON_New_Item();if(item){item->type=cJSON_Number;item->valuedouble=num;item->valueint=(int)num;}return item;}$/;"	f
cJSON_CreateObject	cJSON.c	/^cJSON *cJSON_CreateObject()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_Object;return item;}$/;"	f
cJSON_CreateString	cJSON.c	/^cJSON *cJSON_CreateString(const char *string)	{cJSON *item=cJSON_New_Item();if(item){item->type=cJSON_String;item->valuestring=cJSON_strdup(string);}return item;}$/;"	f
cJSON_CreateStringArray	cJSON.c	/^cJSON *cJSON_CreateStringArray(const char **strings,int count)	{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateString(strings[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateTrue	cJSON.c	/^cJSON *cJSON_CreateTrue()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_True;return item;}$/;"	f
cJSON_Delete	cJSON.c	/^void cJSON_Delete(cJSON *c)$/;"	f
cJSON_DeleteItemFromArray	cJSON.c	/^void   cJSON_DeleteItemFromArray(cJSON *array,int which)			{cJSON_Delete(cJSON_DetachItemFromArray(array,which));}$/;"	f
cJSON_DeleteItemFromObject	cJSON.c	/^void   cJSON_DeleteItemFromObject(cJSON *object,const char *string) {cJSON_Delete(cJSON_DetachItemFromObject(object,string));}$/;"	f
cJSON_DetachItemFromArray	cJSON.c	/^cJSON *cJSON_DetachItemFromArray(cJSON *array,int which)			{cJSON *c=array->child;while (c && which>0) c=c->next,which--;if (!c) return 0;$/;"	f
cJSON_DetachItemFromObject	cJSON.c	/^cJSON *cJSON_DetachItemFromObject(cJSON *object,const char *string) {int i=0;cJSON *c=object->child;while (c && cJSON_strcasecmp(c->string,string)) i++,c=c->next;if (c) return cJSON_DetachItemFromArray(object,i);return 0;}$/;"	f
cJSON_False	cJSON.h	34;"	d
cJSON_GetArrayItem	cJSON.c	/^cJSON *cJSON_GetArrayItem(cJSON *array,int item)				{cJSON *c=array->child;  while (c && item>0) item--,c=c->next; return c;}$/;"	f
cJSON_GetArraySize	cJSON.c	/^int    cJSON_GetArraySize(cJSON *array)							{cJSON *c=array->child;int i=0;while(c)i++,c=c->next;return i;}$/;"	f
cJSON_GetErrorPtr	cJSON.c	/^const char *cJSON_GetErrorPtr() {return ep;}$/;"	f
cJSON_GetObjectItem	cJSON.c	/^cJSON *cJSON_GetObjectItem(cJSON *object,const char *string)	{cJSON *c=object->child; while (c && cJSON_strcasecmp(c->string,string)) c=c->next; return c;}$/;"	f
cJSON_Hooks	cJSON.h	/^typedef struct cJSON_Hooks {$/;"	s
cJSON_Hooks	cJSON.h	/^} cJSON_Hooks;$/;"	t	typeref:struct:cJSON_Hooks
cJSON_InitHooks	cJSON.c	/^void cJSON_InitHooks(cJSON_Hooks* hooks)$/;"	f
cJSON_IsReference	cJSON.h	42;"	d
cJSON_NULL	cJSON.h	36;"	d
cJSON_New_Item	cJSON.c	/^static cJSON *cJSON_New_Item()$/;"	f	file:
cJSON_Number	cJSON.h	37;"	d
cJSON_Object	cJSON.h	40;"	d
cJSON_Parse	cJSON.c	/^cJSON *cJSON_Parse(const char *value)$/;"	f
cJSON_Print	cJSON.c	/^char *cJSON_Print(cJSON *item)				{return print_value(item,0,1);}$/;"	f
cJSON_PrintUnformatted	cJSON.c	/^char *cJSON_PrintUnformatted(cJSON *item)	{return print_value(item,0,0);}$/;"	f
cJSON_ReplaceItemInArray	cJSON.c	/^void   cJSON_ReplaceItemInArray(cJSON *array,int which,cJSON *newitem)		{cJSON *c=array->child;while (c && which>0) c=c->next,which--;if (!c) return;$/;"	f
cJSON_ReplaceItemInObject	cJSON.c	/^void   cJSON_ReplaceItemInObject(cJSON *object,const char *string,cJSON *newitem){int i=0;cJSON *c=object->child;while(c && cJSON_strcasecmp(c->string,string))i++,c=c->next;if(c){newitem->string=cJSON_strdup(string);cJSON_ReplaceItemInArray(object,i,newitem);}}$/;"	f
cJSON_String	cJSON.h	38;"	d
cJSON_True	cJSON.h	35;"	d
cJSON__h	cJSON.h	24;"	d
cJSON_free	cJSON.c	/^static void (*cJSON_free)(void *ptr) = free;$/;"	v	file:
cJSON_malloc	cJSON.c	/^static void *(*cJSON_malloc)(size_t sz) = malloc;$/;"	v	file:
cJSON_strcasecmp	cJSON.c	/^static int cJSON_strcasecmp(const char *s1,const char *s2)$/;"	f	file:
cJSON_strdup	cJSON.c	/^static char* cJSON_strdup(const char* str)$/;"	f	file:
cached_mem	wt/guide_header.h	/^	unsigned int cached_mem;$/;"	m	struct:authenticate_node
cached_mem	wt/guide_header.h	/^	unsigned int cached_mem;$/;"	m	struct:authenticate_stat
cached_mem	wt/header.h	/^	unsigned int cached_mem;$/;"	m	struct:ag_msg_stat
cer_msg_st	wt/header.h	/^typedef struct cer_msg_st$/;"	s
cer_msg_st	wt/header.h	/^}cer_msg_st;$/;"	t	typeref:struct:cer_msg_st
cgv_guide_port	wt/main.c	/^int	 cgv_guide_port;					\/\/ ÂºïÂØºÊúçÂä°Âô®ÂºÄÊîæÁªôËÆæÂ§áÁöÑÁ´ØÂè£$/;"	v
cgv_platform_port	main.c	/^int	 cgv_platform_port = 5633;					\/\/ ÂºÄÊîæÁªôÂπ≥Âè∞ÁöÑÁ´ØÂè£$/;"	v
cgv_platform_port	wt/main.c	/^int	 cgv_platform_port;					\/\/ ÂºÄÊîæÁªôÂπ≥Âè∞ÁöÑÁ´ØÂè£$/;"	v
cgv_report_interval	wt/main.c	/^int  cgv_report_interval;				\/\/ ÂºïÂØºÊúçÂä°Âô®‰∏éËÆ§ËØÅÁöÑÁä∂ÊÄÅÊä•ÂëäÊä•ÊñáÈó¥Èöî$/;"	v
cgv_report_port	wt/main.c	/^int  cgv_report_port;					\/\/ ÂºïÂØºÊúçÂä°Âô®ÂºÄÊîæÁªôËÆ§ËØÅÊúçÂä°Âô®ÁöÑÁä∂ÊÄÅÊä•ÂëäÁ´ØÂè£$/;"	v
cgv_sql_name	wt/main.c	/^char cgv_sql_name[32];					\/\/ sql name$/;"	v
cgv_sql_pass	wt/main.c	/^char cgv_sql_pass[32];					\/\/ sql password$/;"	v
cgv_sql_user	wt/main.c	/^char cgv_sql_user[32];					\/\/ sql user$/;"	v
cgv_third_port	wt/main.c	/^int  cgv_third_port;					\/\/ ÂºÄÊîæÁªôÁ¨¨‰∏âÊñπÁ®ãÂ∫èÁöÑÁõëÂê¨Êé•Âè£$/;"	v
channel	wt/header.h	/^	__u8 channel;								\/\/ È¢ëÈÅì$/;"	m	struct:ac_ap_wifi_base_conf_st
child	cJSON.h	/^	struct cJSON *child;		\/* An array or object item will have a child pointer pointing to a chain of the items in the array\/object. *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
cli_addr	ac_recv.c	/^	struct sockaddr_in cli_addr;$/;"	v	typeref:struct:sockaddr_in
cmcclogin_handler	cmcc_portal/cmcclogin/mod_cmcclogin.c	/^static int cmcclogin_handler(request_rec *r)$/;"	f	file:
cmcclogin_module	cmcc_portal/cmcclogin/mod_cmcclogin.c	/^module AP_MODULE_DECLARE_DATA cmcclogin_module = {$/;"	v
cmcclogin_register_hooks	cmcc_portal/cmcclogin/mod_cmcclogin.c	/^static void cmcclogin_register_hooks(apr_pool_t *p)$/;"	f	file:
cmdID	wt/header.h	/^	unsigned char	cmdID;			\/\/ ÂëΩ‰ª§Âè∑ÔºåÂèÇËÄÉ‰∏äËø∞ÂÆèÂÆö‰πâ„ÄÇ$/;"	m	struct:ac_head_st
code_convert	wt/utils.c	/^int code_convert(char *from_charset, char *to_charset, char *inbuf, size_t inlen, char *outbuf, size_t outlen)$/;"	f
company_addr	wt/header.h	/^	char	company_addr[256];$/;"	m	struct:bg_conn_msg
company_name	wt/header.h	/^	char	company_name[128];$/;"	m	struct:bg_conn_msg
conn_handle	wt/header.h	/^	SQLHDBC		conn_handle;					\/\/ Handle connection ËøûÊé•Âè•ÊüÑ$/;"	m	struct:wt_sql_handle
conn_res	wt/header.h	/^	unsigned int conn_res;				\/\/ ÂõûÂ§ç‰ª£Á†Å$/;"	m	struct:ag_msg_conn_res
cont	wt/header.h	/^	__u8  cont[32];					\/\/ ËÅîÁ≥ª‰∫∫$/;"	m	struct:ac_base_info_st
count	wt/header.h	/^	__u32   count;						\/\/ ap‰∏™Êï∞$/;"	m	struct:ac_state_st
cp_ac_recv_thread	ac_recv.c	/^void* cp_ac_recv_thread(void *fd)$/;"	f
cpu_usage	wt/guide_header.h	/^	unsigned int cpu_usage;					\/\/cpu‰ΩøÁî®Áéá$/;"	m	struct:authenticate_node
cpu_usage	wt/guide_header.h	/^	unsigned int cpu_usage;					\/\/cpu‰ΩøÁî®Áéá$/;"	m	struct:authenticate_stat
cpu_usage	wt/header.h	/^	unsigned int cpu_usage;$/;"	m	struct:ag_msg_stat
crc	wt/header.h	/^	__u32	crc;					\/\/ Ê†°È™åÂíå,ÂÖ®ÂåÖÊ£ÄÈ™å$/;"	m	struct:msg_head_st
create_reference	cJSON.c	/^static cJSON *create_reference(cJSON *item) {cJSON *ref=cJSON_New_Item();if (!ref) return 0;memcpy(ref,item,sizeof(cJSON));ref->string=0;ref->type|=cJSON_IsReference;ref->next=ref->prev=0;return ref;}$/;"	f	file:
create_time	wt/header.h	/^	__u32 create_time;			\/\/ ÂàõÂª∫Êó∂Èó¥ÔºåÂè™ÊòØÂÆ¢Êà∑Á´Ø‰∏∫ACÊó∂Êâç‰ΩøÁî®ÔºåË°®Á§∫ACÂàöËØÜÂà∞APÁöÑÊó∂Èó¥Êà≥$/;"	m	struct:ac_ap_user_st
cs_type	wt/header.h	/^	__u16	cs_type;				\/\/ Âú∫ÊâÄÁ±ªÂûã,ÂèñÂÄºÂèÇËÄÉenum cs_type, Â¶Ç,ÈÖíÂ∫ó„ÄÅËçØÂ∫ó„ÄÅÂ∞èÂå∫Á≠âÁ≠â$/;"	m	struct:cer_msg_st
ct_max	wt/header.h	/^	__u32 ct_max;			\/\/ ËøûÊé•Êï∞ÂÆπÈáè$/;"	m	struct:ac_ap_base_conf_st
ct_num	wt/header.h	/^	__u32 ct_num;			\/\/ ÂΩìÂâçËøûÊé•Êï∞	$/;"	m	struct:ac_ap_base_conf_st
ctrlURL	wt/header.h	/^	__u8  ctrlURL[512];		\/\/ ÊéßÂà∂ÊúçÂä°Á´ØÂú∞ÂùÄURLÔºåÂ¶Ç:www.aaa.com$/;"	m	struct:ac_proxy_st
cur_queue_size	wt/guide_header.h	/^	unsigned int cur_queue_size;			\/\/ Á≠âÂæÖÈòüÂàó‰∏≠ÁöÑ‰ªªÂä°Êï∞ÁõÆ$/;"	m	struct:authenticate_stat
cur_queue_size	wt/guide_header.h	/^	unsigned int cur_queue_size;			\/\/Êú™Â§ÑÁêÜÊä•ÊñáÊï∞$/;"	m	struct:authenticate_node
cur_queue_size	wt/header.h	/^	unsigned int cur_queue_size;			\/\/ Á≠âÂæÖÈòüÂàó‰∏≠ÁöÑ‰ªªÂä°Êï∞ÁõÆ$/;"	m	struct:ag_msg_stat
cur_queue_size	wt/pool.c	/^	unsigned int	cur_queue_size;			\/\/ Á≠âÂæÖÈòüÂàó‰∏≠ÁöÑ‰ªªÂä°Êï∞ÁõÆ$/;"	m	struct:__anon3	file:
curr_num	wt/header.h	/^		unsigned int	curr_num;$/;"	m	struct:bg_rts_msg::bg_rt_node
data	wt/header.h	/^	unsigned char	data[0];		\/\/ Êï∞ÊçÆÊåáÈíà$/;"	m	struct:ac_head_st
datalen	wt/header.h	/^	unsigned int	datalen;		\/\/ Êï∞ÊçÆÈïøÂ∫¶ÔºåÂåÖÂê´Êï∞ÊçÆÂ§¥ÈïøÂ∫¶ $/;"	m	struct:ac_head_st
def_redirect	wt/header.h	/^	__u8	def_redirect[128];		\/\/ ÊúçÂä°Âô®Êèê‰æõÁöÑÈªòËÆ§Ë∑≥ËΩ¨Âú∞ÂùÄ,Âú®struct user_cmd_req_type ‰∏≠Ê≤°ÊúâÊåáÂÆöË∑≥ËΩ¨Âú∞ÂùÄÊó∂‰ΩøÁî®$/;"	m	struct:cer_msg_st
defaultkey	wt/header.h	/^	unsigned char defaultkey; \/*1-4 Áî®*\/$/;"	m	struct:ac_wep_key_st
destroy_ini	wt/ini.c	/^void destroy_ini(int fd)$/;"	f
dev_name	wt/header.h	/^	__u8	dev_name[32];			\/\/ ËÆæÂ§áÊ†áËØÜ$/;"	m	struct:cer_msg_st
deviceID	wt/header.h	/^	__u32	deviceID;					\/\/ ËÆæÂ§áID (ÂîØ‰∏ÄÊÄßÔºå0..ÈúÄË¶ÅÊúçÂä°Âô®ÁîüÊàêÂêéËøîÂõû,ÂÖ∂‰ªñ..)$/;"	m	struct:ac_login_st
deviceID	wt/header.h	/^	__u32	deviceID;					\/\/ ËÆæÂ§áID$/;"	m	struct:ac_state_st
deviceID	wt/header.h	/^	unsigned int	deviceID;		\/\/ Ë∑ØÁî±Âô®IDÔºåÂîØ‰∏ÄÊÄß$/;"	m	struct:ac_head_st
deviceName	wt/header.h	/^	__u8    deviceName[64];				\/\/ Ë∑ØÁî±Âô®ÂêçÁß∞	$/;"	m	struct:ac_login_st
devicePWD	wt/header.h	/^	__u8    devicePWD[32];				\/\/ ËÆæÂ§áÂØÜÁ†Å$/;"	m	struct:ac_login_st
device_id	wt/header.h	/^	__u32							device_id;			\/\/ APËÆæÂ§áÁöÑdevice ID,ÂîØ‰∏ÄÊÄß (ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_conf_st
device_type	wt/header.h	/^	unsigned int	device_type;	\/\/ 1‰∏∫ACÔºå2‰∏∫Êó†Á∫øË∑ØÁî±Ôºå3‰∏∫‰∏çÂ∏¶Êó†Á∫øË∑ØÁî±	$/;"	m	struct:ac_head_st
dhcp_info	wt/header.h	/^	struct ac_ap_dhcp_conf_st		dhcp_info;			\/\/ APÁöÑDHCP‰ø°ÊÅØ$/;"	m	struct:ac_ap_conf_st	typeref:struct:ac_ap_conf_st::ac_ap_dhcp_conf_st
dinate	wt/header.h	/^	__u8  dinate[32];				\/\/ ËÆæÂ§áÂùêÊ†á$/;"	m	struct:ac_base_info_st
dns	wt/header.h	/^	__u32 dns[2];			\/\/ DNSÂú∞ÂùÄ(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_dhcp_conf_st
driver_code	wt/header.h	/^		char			driver_code[32];$/;"	m	struct:bg_rts_msg::bg_rt_node
enable	wt/header.h	/^	__u32 enable;			\/\/ 78 ÂºÄÂêØ,Èùû78 ‰∏∫ÂÖ≥Èó≠$/;"	m	struct:ac_proxy_st
enable	wt/header.h	/^	__u8  enable;			\/\/ ÂºÄÂÖ≥0:ÂÖ≥Èó≠,1:ÊôÆÈÄöËÆæÁΩÆ,2:È´òÁ∫ßËÆæÁΩÆ$/;"	m	struct:ac_ap_dhcp_conf_st
enable	wt/header.h	/^	__u8 enable;								\/\/ Êó†Á∫øÂºÄÂÖ≥1:ÂºÄÂêØ,0:ÂÖ≥Èó≠$/;"	m	struct:ac_ap_wifi_base_conf_st
encrypt_type	wt/header.h	/^	__u8 encrypt_type;			\/\/ Âä†ÂØÜÁ±ªÂûãÔºå0:NONE,1:WEP,2:TKIP,3:AES$/;"	m	struct:ac_ap_wifi_wds_list_st
encrypt_type	wt/header.h	/^	unsigned char	encrypt_type;			\/\/1:TKIP,2:AES,0:TKIP\/AES$/;"	m	struct:ac_wpa_key_st
encrypt_type	wt/header.h	/^	unsigned char encrypt_type; \/*0:NONE,1:WEP*\/$/;"	m	struct:ac_wep_key_st
end_ipaddr	wt/header.h	/^	__u32 end_ipaddr;		\/\/ ÁªìÊùüIPÂú∞ÂùÄ(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_dhcp_conf_st
env_handle	wt/header.h	/^	SQLHENV		env_handle;						\/\/ Handle ODBC environment ÁéØÂ¢ÉÂè•ÊüÑ$/;"	m	struct:wt_sql_handle
ep	cJSON.c	/^static const char *ep;$/;"	v	file:
errCode	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 errCode;		\/\/ ErrCode◊÷∂Œ∫ÕType◊÷∂Œ“ª∆±Ì æ“ª∂®µƒ“‚“Â£¨≥§∂»Œ™ 1◊÷Ω⁄$/;"	m	struct:portal_ac
errCode	header.h	/^	unsigned char errCode;		\/\/ ErrCodeÂ≠óÊÆµÂíåTypeÂ≠óÊÆµ‰∏ÄËµ∑Ë°®Á§∫‰∏ÄÂÆöÁöÑÊÑè‰πâÔºåÈïøÂ∫¶‰∏∫ 1Â≠óËäÇ$/;"	m	struct:portal_ac
err_msg	wt/header.h	/^	char		err_msg[200];$/;"	m	struct:wt_sql_handle
firstByteMark	cJSON.c	/^static const unsigned char firstByteMark[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };$/;"	v	file:
flag	wt/header.h	/^	__u32							flag;				\/\/ Á¨¨1‰ΩçËÆæÁΩÆ‰∏∫1Ë°®Á§∫base_infoÊúâÂèÇÊï∞„ÄÇ„ÄÇ„ÄÇ(ÁΩëÁªúÂ≠óËäÇÂ∫è)ÔºåÂú®ÊúçÂä°Á´Ø‰∏ãÂèëÊó∂ÊâçÊúâÁî®$/;"	m	struct:ac_ap_conf_st
free_fn	cJSON.h	/^      void (*free_fn)(void *ptr);$/;"	m	struct:cJSON_Hooks
free_mem	wt/guide_header.h	/^	unsigned int free_mem;					\/\/Á©∫Èó≤ÂÜÖÂ≠ò$/;"	m	struct:authenticate_node
free_mem	wt/guide_header.h	/^	unsigned int free_mem;					\/\/Á©∫Èó≤ÂÜÖÂ≠ò$/;"	m	struct:authenticate_stat
free_mem	wt/header.h	/^	unsigned int free_mem;$/;"	m	struct:ag_msg_stat
ftime	wt/header.h	/^	__u8  ftime[50];		\/\/ Á≥ªÁªüÁ©∫Èó≤ÁöÑÊó∂Èó¥Ôºà‰ª•Áßí‰∏∫Âçï‰ΩçÔºâ$/;"	m	struct:ac_ap_base_conf_st
fuzeren	wt/header.h	/^		char			fuzeren[32];$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
fzr_name	wt/header.h	/^	char	fzr_name[32];$/;"	m	struct:bg_conn_msg
fzr_tel	wt/header.h	/^	char	fzr_tel[32];$/;"	m	struct:bg_conn_msg
g_ACPort	cmcc_portal/cmcc_portal/Portal.cpp	/^int g_ACPort = 11111;$/;"	v
g_Log	cmcc_portal/cmcc_portal/send.cpp	/^CKTLog g_Log;$/;"	v
g_Log	cmcc_portal/cmcclogin/mod_cmcclogin.c	/^	static CKTLog	g_Log;$/;"	v	file:
g_bInit	cmcc_portal/cmcclogin/mod_cmcclogin.c	/^	static bool	g_bInit = false;$/;"	v	file:
gateway	wt/header.h	/^	__u32 gateway;			\/\/ AP ÁΩëÂÖ≥(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_base_conf_st
generateSerialNo	cmcc_portal/cmcc_portal/Portal.cpp	/^unsigned short generateSerialNo()$/;"	f
generateSerialNo	portal.c	/^unsigned short generateSerialNo()$/;"	f
get_config	wt/main.c	/^int get_config()$/;"	f
get_cur_queue_size	wt/pool.c	/^unsigned int inline get_cur_queue_size()$/;"	f
get_ini	wt/ini.c	/^int get_ini(char *buf, const char* key, char* value)$/;"	f
guide_conn_thread	wt/router_guide.c	/^int guide_conn_thread()$/;"	f
guide_flag	wt/header.h	/^	int		guide_flag;			\/\/ -1 ‰∏çÂèØÁî® 0 ËÄÅÁî®Êà∑ 1 Êñ∞Áî®Êà∑$/;"	m	struct:bg_num_msg
guide_process	wt/router_guide.c	/^void* guide_process(void *fd){$/;"	f
gv_authenticate_count	wt/main.c	/^unsigned int		gv_authenticate_count = 0;		\/\/ Â∑≤ÂêØÂä®ËÆ§ËØÅÊúçÂä°Âô®Êï∞Èáè$/;"	v
gv_authenticate_list_head	wt/main.c	/^LIST_HEAD(			gv_authenticate_list_head);		\/\/ Â∑≤ÂêØÂä®ËÆ§ËØÅÊúçÂä°Âô®ÈìæË°®Â§¥$/;"	v
gv_authenticate_list_lock	wt/main.c	/^pthread_mutex_t		gv_authenticate_list_lock;		\/\/ Â∑≤ÂêØÂä®ËÆ§ËØÅÊúçÂä°Âô®ÈìæË°®‰∫íÊñ•ÈîÅ$/;"	v
gv_boss_flag	wt/main.c	/^int					gv_boss_flag = 0;				\/\/ bossÊéßÂà∂ÁöÑÊòØÂê¶ÂèØ‰ª•ÂºïÂØºÁöÑÊ†áÂøó$/;"	v
gv_boss_flag_lock	wt/main.c	/^pthread_mutex_t		gv_boss_flag_lock;$/;"	v
gv_boss_rt_head	wt/main.c	/^LIST_HEAD(			gv_boss_rt_head);				\/\/ ËÆæÂ§áÁ±ªÂûãÈìæË°®$/;"	v
gv_guide_router_count	wt/main.c	/^unsigned int		gv_guide_router_count = 0;		\/\/ ÂºïÂØºËøáÁöÑËÆæÂ§áËÆ°Êï∞Âô®$/;"	v
gv_heart_interval	wt/main.c	/^int					gv_heart_interval = 300;		\/\/ ÂøÉË∑≥Êó∂Èó¥$/;"	v
gv_num_falg	wt/main.c	/^int					gv_num_falg = 0;				\/\/ Êï∞ÈáèÊéßÂà∂falg$/;"	v
gv_rt_num	wt/main.c	/^int					gv_rt_num = 0;					\/\/ ËÆæÂ§áÁ±ªÂûãÊï∞Èáè$/;"	v
gv_task_lock	wt/main.c	/^pthread_mutex_t		gv_task_lock;					\/\/ Êï∞ÊçÆÂ∫ìÂÆöÊó∂‰ªªÂä°‰∫íÊñ•ÈîÅ$/;"	v
gv_third_count	wt/main.c	/^unsigned int		gv_third_count = 0;				\/\/ Á¨¨‰∏âÊñπÁõëÂê¨Á®ãÂ∫èËøûÊé•ËÆ°Êï∞Âô®$/;"	v
gv_total_num	wt/main.c	/^int					gv_total_num = 0;				\/\/ ËÆæÂ§áÊï∞Èáè$/;"	v
gw	wt/header.h	/^	__u32 gw;				\/\/ ÁΩëÂÖ≥(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_dhcp_conf_st
hard_id	wt/header.h	/^	__u32	hard_id;				\/\/ ËÆæÂ§áÁ°¨‰ª∂ÂûãÂè∑$/;"	m	struct:cer_msg_st
hard_seq	wt/header.h	/^	__u8	hard_seq[64];			\/\/ ËÆæÂ§áÂ∫èÂàóÂè∑$/;"	m	struct:cer_msg_st
hard_seq	wt/header.h	/^	__u8	hard_seq[64];			\/\/ ËÆæÂ§áÂ∫èÂàóÂè∑$/;"	m	struct:msg_head_st
head	wt/header.h	/^	ag_msg_head	 head;$/;"	m	struct:ag_msg_stat
head	wt/header.h	/^	ag_msg_head  head;$/;"	m	struct:ag_msg_mac
head	wt/header.h	/^	ag_msg_head  head;$/;"	m	struct:ag_msg_router
head	wt/header.h	/^	ag_msg_head head;$/;"	m	struct:ag_msg_conn
head	wt/header.h	/^	ag_msg_head head;$/;"	m	struct:ag_msg_conn_res
head	wt/header.h	/^	unsigned char	head;$/;"	m	struct:bg_msg_head
head	wt/header.h	/^	unsigned char head;				\/\/ Â§¥$/;"	m	struct:ag_msg_head
heart_interval	wt/header.h	/^	int		heart_interval;		\/\/ ÂøÉË∑≥È¢ëÁéá$/;"	m	struct:bg_num_msg
hearttime	wt/header.h	/^	__u32   hearttime;					\/\/ ÂøÉË∑≥Êó∂Èó¥Âçï‰ΩçÔºàËåÉÂõ¥ 5-600 ÁßíÔºâ Áî®‰∫é Ë∑ØÁî±Âô® Â§öÈïøÊó∂Èó¥ ÂèëÈÄÅ‰∏ÄÊ¨° Âú®Á∫øÁöÑ‰ø°ÊÅØÔºåÊúçÂä°Âô®ÊåáÂÆö„ÄÇÂçï‰ΩçÁßíÔºåÈªòËÆ§‰∏∫60Áßí$/;"	m	struct:ac_login_st
hide	wt/header.h	/^	__u8 hide;				\/\/ ÈöêËóè$/;"	m	struct:ac_ap_wifi_base_list_st
http_passwd	wt/header.h	/^	__u8 http_passwd[32];	\/\/ WBÁÆ°ÁêÜÂØÜÁ†Å$/;"	m	struct:ac_ap_base_conf_st
http_username	wt/header.h	/^	__u8 http_username[32];	\/\/ WEBÁÆ°ÁêÜË¥¶Âè∑$/;"	m	struct:ac_ap_base_conf_st
id	wt/header.h	/^		unsigned int	id;$/;"	m	struct:bg_rts_msg::bg_rt_node
init_ini	wt/ini.c	/^int init_ini(char* filename, int *fd, char* buf, int len)$/;"	f
intIp_to_strIp	cmcc_portal/cmcc_portal/UtilFunc.cpp	/^string intIp_to_strIp(unsigned int pIp)$/;"	f
ip	wt/guide_header.h	/^	unsigned int ip;						\/\/ËÆæÂ§áip$/;"	m	struct:authenticate_stat
ip_to_str	wt/utils.c	/^void ip_to_str(char* cip, __u32 sip)$/;"	f
ipaddr	wt/header.h	/^	__u32 ipaddr;			\/\/ AP IPÂú∞ÂùÄ(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_base_conf_st
is_streamline	wt/header.h	/^	int		is_streamline;$/;"	m	struct:bg_conn_msg
ishaveacserver	wt/header.h	/^		unsigned int	ishaveacserver;$/;"	m	struct:bg_rts_msg::bg_rt_node
ishavewifi	wt/header.h	/^		unsigned int	ishavewifi;$/;"	m	struct:bg_rts_msg::bg_rt_node
isok	wt/header.h	/^		char			isok;$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
isolated	wt/header.h	/^	__u8 isolated;								\/\/ AP ÈöîÁ¶ª0:Á¶ÅÁî®,1:ÂêØÁî®$/;"	m	struct:ac_ap_wifi_base_conf_st
isolated	wt/header.h	/^	__u8 isolated;			\/\/ ÈöîÁ¶ª$/;"	m	struct:ac_ap_wifi_base_list_st
isreopen	wt/header.h	/^		char			isreopen;$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
key	wt/header.h	/^	__u8 key[65];				\/\/ ÂØÜÈí•$/;"	m	struct:ac_ap_wifi_wds_list_st
key	wt/header.h	/^	unsigned char	key[64];$/;"	m	struct:ac_wpa_key_st
key	wt/header.h	/^	}key;$/;"	m	struct:ac_ap_wifi_base_list_st	typeref:union:ac_ap_wifi_base_list_st::__anon1
key1	wt/header.h	/^	unsigned char key1[27];$/;"	m	struct:ac_wep_key_st
key1type	wt/header.h	/^	unsigned char key1type; \/*1:ASCII 0:HEX*\/$/;"	m	struct:ac_wep_key_st
key2	wt/header.h	/^	unsigned char key2[27];$/;"	m	struct:ac_wep_key_st
key2type	wt/header.h	/^	unsigned char key2type; \/*1:ASCII 0:HEX*\/$/;"	m	struct:ac_wep_key_st
key3	wt/header.h	/^	unsigned char key3[27];$/;"	m	struct:ac_wep_key_st
key3type	wt/header.h	/^	unsigned char key3type; \/*1:ASCII 0:HEX*\/$/;"	m	struct:ac_wep_key_st
key4	wt/header.h	/^	unsigned char key4[27];$/;"	m	struct:ac_wep_key_st
key4type	wt/header.h	/^	unsigned char key4type; \/*1:ASCII 0:HEX*\/$/;"	m	struct:ac_wep_key_st
last_time	wt/guide_header.h	/^	time_t		 last_time;					\/\/ÊúÄÂêéÁä∂ÊÄÅÊä•ÂëäÊó∂Èó¥$/;"	m	struct:authenticate_node
lease_time	wt/header.h	/^	__u32 lease_time;		\/\/ ÁßüÊúüÊó∂Èó¥(Áßí)(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_dhcp_conf_st
len	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 len;$/;"	m	struct:portal_ac_attr
len	header.h	/^	unsigned char len;$/;"	m	struct:portal_ac_attr
len	wt/header.h	/^	__u16	len;					\/\/ Êï∞ÊçÆÂåÖÁöÑÈïøÂ∫¶$/;"	m	struct:msg_head_st
len	wt/header.h	/^	unsigned int	len;$/;"	m	struct:bg_msg_head
len	wt/header.h	/^	unsigned short len;				\/\/ Êä•ÊñáÈïøÂ∫¶$/;"	m	struct:ag_msg_head
list	wt/header.h	/^	struct ac_ap_wifi_base_list_st list[5];	\/\/ 5‰∏™SSIDÁöÑÈÖçÁΩÆ 740Â≠óËäÇ$/;"	m	struct:ac_ap_wifi_base_conf_st	typeref:struct:ac_ap_wifi_base_conf_st::ac_ap_wifi_base_list_st
list	wt/header.h	/^	struct ac_ap_wifi_wds_list_st list[4];	\/\/ ÊîØÊåÅ4‰∏™WDS 288Â≠óËäÇ$/;"	m	struct:ac_ap_wifi_wds_conf_st	typeref:struct:ac_ap_wifi_wds_conf_st::ac_ap_wifi_wds_list_st
list_add	wt/list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	wt/list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_del	wt/list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_empty	wt/list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_for_each	wt/list.h	112;"	d
list_for_each_prev	wt/list.h	120;"	d
list_head	wt/list.h	/^struct list_head {$/;"	s
load_weight	wt/guide_header.h	/^	int			 load_weight;				\/\/Ë¥üËΩΩÁä∂ÊÄÅ ‰ΩøÁî®ËÆ§ËØÅÊúçÂä°Âô®ÂèëÊù•ÁöÑÁä∂ÊÄÅÁî®ÁÆóÊ≥ïÁÆóÂá∫$/;"	m	struct:authenticate_node
lock	wt/guide_header.h	/^	pthread_mutex_t		lock;$/;"	m	struct:authenticate_node
log_day	logs.c	/^int				log_day;			\/\/ ÂΩìÂâçlogÊñá‰ª∂ÂØπÂ∫îÁöÑÊó•Êúü-Â§©$/;"	v
log_day	wt/logs.c	/^int				log_day;			\/\/ ÂΩìÂâçlogÊñá‰ª∂ÂØπÂ∫îÁöÑÊó•Êúü-Â§©$/;"	v
log_name	logs.c	/^char			log_name[32];		\/\/ logÊñá‰ª∂ÂâçÁºÄÂêç$/;"	v
log_name	wt/logs.c	/^char			log_name[32];		\/\/ logÊñá‰ª∂ÂâçÁºÄÂêç$/;"	v
log_statiscits	wt/time_task.c	/^int log_statiscits(wt_sql_handle *s1_handle, wt_sql_handle *s2_handle, wt_sql_handle *iud_handle, char *s_yesterday, char *s_delete_log_day)$/;"	f
log_tongji	wt/time_task.c	/^int log_tongji(wt_sql_handle *s1_handle, wt_sql_handle *s2_handle, wt_sql_handle *iud_handle, char *s_yesterday)$/;"	f
logs_buf	logs.c	/^static char logs_buf[2048];			\/\/ logÂÜÖÂÆπ$/;"	v	file:
logs_buf	wt/logs.c	/^static char logs_buf[2048];			\/\/ logÂÜÖÂÆπ$/;"	v	file:
logs_create	logs.c	/^int logs_create()$/;"	f
logs_create	wt/logs.c	/^int inline logs_create()$/;"	f
logs_destroy	logs.c	/^void logs_destroy()$/;"	f
logs_destroy	wt/logs.c	/^void logs_destroy()$/;"	f
logs_fd	logs.c	/^int				logs_fd		= 0;	\/\/ Êñá‰ª∂ÊèèËø∞Á¨¶$/;"	v
logs_fd	wt/logs.c	/^int				logs_fd		= 0;	\/\/ Êñá‰ª∂ÊèèËø∞Á¨¶$/;"	v
logs_init	logs.c	/^int logs_init(char* prefix)$/;"	f
logs_init	wt/logs.c	/^int logs_init(char* prefix)$/;"	f
logs_lock	logs.c	/^pthread_mutex_t logs_lock;			\/\/ logÂÜôÂÖ•ÂÖ®Â±Ä‰∫íÊñ•ÈîÅ$/;"	v
logs_lock	wt/logs.c	/^pthread_mutex_t logs_lock;			\/\/ logÂÜôÂÖ•ÂÖ®Â±Ä‰∫íÊñ•ÈîÅ$/;"	v
logs_mytime	logs.c	/^static struct tm *logs_mytime;		\/\/ logÊó∂Èó¥$/;"	v	typeref:struct:tm	file:
logs_mytime	wt/logs.c	/^static struct tm *logs_mytime;		\/\/ logÊó∂Èó¥$/;"	v	typeref:struct:tm	file:
logs_ret	logs.c	/^static int logs_strlen,logs_ret;	\/\/$/;"	v	file:
logs_ret	wt/logs.c	/^static int logs_strlen,logs_ret;	\/\/$/;"	v	file:
logs_strlen	logs.c	/^static int logs_strlen,logs_ret;	\/\/$/;"	v	file:
logs_strlen	wt/logs.c	/^static int logs_strlen,logs_ret;	\/\/$/;"	v	file:
logs_temp	logs.c	/^static char logs_temp[2048];		\/\/ logÂÜÖÂÆπ‰∏¥Êó∂Â≠òÊîæ$/;"	v	file:
logs_temp	wt/logs.c	/^static char logs_temp[2048];		\/\/ logÂÜÖÂÆπ‰∏¥Êó∂Â≠òÊîæ$/;"	v	file:
logs_tm	logs.c	/^static time_t logs_tm;				\/\/ logÊó∂Èó¥$/;"	v	file:
logs_tm	wt/logs.c	/^static time_t logs_tm;				\/\/ logÊó∂Èó¥$/;"	v	file:
mac	wt/header.h	/^	__u8 mac[6];				\/\/ MACÂú∞ÂùÄ$/;"	m	struct:ac_ap_wifi_wds_list_st
mac	wt/header.h	/^	char		 mac[16];$/;"	m	struct:ag_msg_mac
mac_num	wt/header.h	/^		unsigned int	mac_num;$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
main	cmcc_portal/cmcc_portal/recv.cpp	/^int main()$/;"	f
main	cmcc_portal/cmcc_portal/send.cpp	/^int main(int argc ,char* argv[])$/;"	f
main	main.c	/^int main(int argc, char** argv)$/;"	f
main	wt/main.c	/^int main(int argc, char** argv)$/;"	f
malloc_fn	cJSON.h	/^      void *(*malloc_fn)(size_t sz);$/;"	m	struct:cJSON_Hooks
mask	wt/header.h	/^	__u32 mask;				\/\/ Êé©Á†Å(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_dhcp_conf_st
max_num	wt/header.h	/^	__u8 max_num;			\/\/ ÊúÄÂ§ßÁî®Êà∑Êï∞$/;"	m	struct:ac_ap_base_conf_st
mem_free	wt/header.h	/^	__u32 mem_free;			\/\/ Ââ©‰ΩôÂÜÖÂ≠òÔºåÂçï‰ΩçByte$/;"	m	struct:ac_ap_base_conf_st
mem_total	wt/header.h	/^	__u32 mem_total;		\/\/ ÊÄªÂÜÖÂ≠òÔºåÂçï‰ΩçByte$/;"	m	struct:ac_ap_base_conf_st
mng_srv	wt/header.h	/^	__u8	mng_srv[64];			\/\/ ÈõÜ‰∏≠ÁÆ°ÁêÜÊúçÂä°Âô®,ÁõÆÂâçÊöÇÊó∂‰øùÁïô‰∏çÁî®$/;"	m	struct:cer_msg_st
mobile	wt/header.h	/^		char			mobile[16];$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
mode	wt/header.h	/^	__u8	mode;					\/\/ ÊñπÂêë,1: Ë∑ØÁî±Âô®ÂèëÂæÄÊúçÂä°Âô®Ôºõ2: ÊúçÂä°Âô®ÂèëÂæÄË∑ØÁî±Âô®$/;"	m	struct:msg_head_st
mode	wt/header.h	/^	__u8 mode;									\/\/ ÁΩëÁªúÊ®°Âºè0:11b\/g Ê∑∑Âêà,1:‰ªÖÊîØÊåÅ11b,4:‰ªÖÊîØÊåÅ11g,9:11b\/g\/nÊ∑∑Âêà,6:‰ªÖÊîØÊåÅ11n(2.4G)$/;"	m	struct:ac_ap_wifi_base_conf_st
mode	wt/header.h	/^	unsigned char	mode;			\/\/ 0..ÂÆ¢Êà∑Êú∫->‰∏ªÊú∫Ôºå1..‰∏ªÊú∫Âà∞ÂÆ¢Êà∑Êú∫	$/;"	m	struct:ac_head_st
mode_fromsvr	wt/header.h	/^	mode_fromsvr,					\/\/2 ÊúçÂä°Âô®ÂèëÂæÄË∑ØÁî±Âô®ÁöÑÊï∞ÊçÆÂåÖ$/;"	e	enum:mode_type
mode_max	wt/header.h	/^	mode_max,$/;"	e	enum:mode_type
mode_tosvr	wt/header.h	/^	mode_tosvr,						\/\/1 Ë∑ØÁî±Âô®ÂèëÂæÄÊúçÂä°Âô®ÁöÑÊï∞ÊçÆÂåÖ$/;"	e	enum:mode_type
mode_type	wt/header.h	/^enum mode_type {$/;"	g
mode_unknown	wt/header.h	/^	mode_unknown = 0, $/;"	e	enum:mode_type
modidate	wt/header.h	/^		char			modidate[32];$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
msg	wt/header.h	/^	__u8	msg[255];					\/\/ Ë°®Á§∫stateÈîôËØØÊó∂ÁöÑ‰ø°ÊÅØ$/;"	m	struct:ac_login_st
msg	wt/header.h	/^	__u8    msg[256];					\/\/ Áä∂ÊÄÅËØ¥ÊòéÔºåÊúçÂä°Âô®‰∏ãÂèëÈÖçÁΩÆÂèÇÊï∞Êó∂ÂÆ¢Êà∑Á´ØÂõûÂ∫î$/;"	m	struct:ac_state_st
msg	wt/header.h	/^	__u8  msg[64];			\/\/ ÊéßÂà∂ÂÆ¢Êà∑Á´ØËøûÊé•ÊéßÂà∂ÊúçÂä°Á´ØÊ∂àÊÅØ$/;"	m	struct:ac_proxy_st
msg_head_st	wt/header.h	/^typedef struct msg_head_st$/;"	s
msg_head_st	wt/header.h	/^}msg_head_st;$/;"	t	typeref:struct:msg_head_st
msg_order_ac_addr_result	wt/header.h	/^	msg_order_ac_addr_result,				\/\/83 ÈõÜ‰∏≠ÁÆ°ÁêÜÂπ≥Âè∞Âú∞ÂùÄÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_ac_addr_set	wt/header.h	/^	msg_order_ac_addr_set = 82,				\/\/82 ÈõÜ‰∏≠ÁÆ°ÁêÜÂπ≥Âè∞Âú∞ÂùÄ‰∏ãÂèë$/;"	e	enum:msg_order_type
msg_order_acac_addr_result	wt/header.h	/^	msg_order_acac_addr_result,				\/\/92 ACACÁöÑÂú∞ÂùÄÁ´ØÂè£‰øÆÊîπÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_acac_addr_set	wt/header.h	/^	msg_order_acac_addr_set = 91,			\/\/91 ACACÁöÑÂú∞ÂùÄÁ´ØÂè£‰øÆÊîπ$/;"	e	enum:msg_order_type
msg_order_addr	wt/header.h	/^	msg_order_addr,							\/\/02 Ëé∑ÂèñËÆ§ËØÅ„ÄÅÂÆ°ËÆ°ÊúçÂä°Âô®Âú∞ÂùÄ,ÂØπÂ∫î struct cer_msg_st;$/;"	e	enum:msg_order_type
msg_order_auth	wt/header.h	/^	msg_order_auth,							\/\/01 ËøûÊé•ËÆ§ËØÅ,ÂØπÂ∫îstruct cer_msg_st;$/;"	e	enum:msg_order_type
msg_order_auto_upgrade	wt/header.h	/^	msg_order_auto_upgrade,					\/\/08 ËÆæÁΩÆË∑ØÁî±Âô®Ëá™Âä®ÂçáÁ∫ß, ÂØπÂ∫î struct auto_upgrade_st$/;"	e	enum:msg_order_type
msg_order_dns_white	wt/header.h	/^	msg_order_dns_white,					\/\/07 Ë∑ØÁî±Âô®‰øÆÊîπÁôΩÂêçÂçï, ÂØπÂ∫î struct dns_white_list_st$/;"	e	enum:msg_order_type
msg_order_guide_addr_result	wt/header.h	/^	msg_order_guide_addr_result,			\/\/96 ÂºïÂØºÂú∞ÂùÄÁ´ØÂè£‰øÆÊîπÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_guide_addr_set	wt/header.h	/^	msg_order_guide_addr_set = 95,			\/\/95 ÂºïÂØºÂú∞ÂùÄÁ´ØÂè£‰øÆÊîπ$/;"	e	enum:msg_order_type
msg_order_heart	wt/header.h	/^	msg_order_heart,						\/\/04 ÂøÉË∑≥ÂåÖ,ÂØπÂ∫î struct heart_msg_st;$/;"	e	enum:msg_order_type
msg_order_httpd_pwd_get	wt/header.h	/^	msg_order_httpd_pwd_get,				\/\/109 Ëé∑Âèñhttpd ÁôªÂΩïÁî®Êà∑ÂêçÂíåÂØÜÁ†Å$/;"	e	enum:msg_order_type
msg_order_httpd_pwd_result	wt/header.h	/^	msg_order_httpd_pwd_result,				\/\/108 ÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_httpd_pwd_send	wt/header.h	/^	msg_order_httpd_pwd_send,				\/\/110 ÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_httpd_pwd_set	wt/header.h	/^	msg_order_httpd_pwd_set,				\/\/107 ËÆæÁΩÆhttpd ÁôªÂΩïÁî®Êà∑ÂêçÂíåÂØÜÁ†Å$/;"	e	enum:msg_order_type
msg_order_local_php_config	wt/header.h	/^	msg_order_local_php_config,				\/\/13 ‰∏ãÂèëËÆ§ËØÅÈ°µÈù¢‰ø°ÊÅØ$/;"	e	enum:msg_order_type
msg_order_local_user_login	wt/header.h	/^	msg_order_local_user_login,				\/\/12 ÂèëÈÄÅÁî®Êà∑ËÆ§ËØÅ‰ø°ÊÅØ$/;"	e	enum:msg_order_type
msg_order_local_user_login_new	wt/header.h	/^	msg_order_local_user_login_new,			\/\/14 ÂèëÈÄÅÁî®Êà∑ËÆ§ËØÅ‰ø°ÊÅØ$/;"	e	enum:msg_order_type
msg_order_max	wt/header.h	/^	msg_order_max,$/;"	e	enum:msg_order_type
msg_order_memory_cache_result	wt/header.h	/^	msg_order_memory_cache_result,			\/\/64 ‰∏ãÂèëÁºìÂ≠òÂà∞ÂÜÖÂ≠òÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_memory_cache_set	wt/header.h	/^	msg_order_memory_cache_set = 63,		\/\/63 ‰∏ãÂèëÁºìÂ≠òÂà∞ÂÜÖÂ≠ò$/;"	e	enum:msg_order_type
msg_order_mx_app_filter_result	wt/header.h	/^	msg_order_mx_app_filter_result,			\/\/62 ÊµÅÂ™í‰ΩìËØÜÂà´ÊéßÂà∂ÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_mx_app_filter_set	wt/header.h	/^	msg_order_mx_app_filter_set,			\/\/61 ÊµÅÂ™í‰ΩìËØÜÂà´ÊéßÂà∂$/;"	e	enum:msg_order_type
msg_order_mx_wireless_config_5g_get	wt/header.h	/^	msg_order_mx_wireless_config_5g_get,	\/\/99 Ëé∑Âèñ5GÊó†Á∫øÈÖçÁΩÆ99$/;"	e	enum:msg_order_type
msg_order_mx_wireless_config_5g_result	wt/header.h	/^	msg_order_mx_wireless_config_5g_result,	\/\/98 ÂõûÂ§ç98$/;"	e	enum:msg_order_type
msg_order_mx_wireless_config_5g_send	wt/header.h	/^	msg_order_mx_wireless_config_5g_send,	\/\/100 ÂõûÂ§ç100$/;"	e	enum:msg_order_type
msg_order_mx_wireless_config_5g_set	wt/header.h	/^	msg_order_mx_wireless_config_5g_set = 97,\/\/97 ‰∏ãÂèë5GÊó†Á∫ø‰ø°ÊÅØÈÖçÁΩÆ97 , struct wt_wifi_base_conf_so$/;"	e	enum:msg_order_type
msg_order_mx_wireless_config_get	wt/header.h	/^	msg_order_mx_wireless_config_get,		\/\/70 Ëé∑ÂèñÊó†Á∫øÈÖçÁΩÆ$/;"	e	enum:msg_order_type
msg_order_mx_wireless_config_result	wt/header.h	/^	msg_order_mx_wireless_config_result,	\/\/69 ÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_mx_wireless_config_send	wt/header.h	/^	msg_order_mx_wireless_config_send,		\/\/71 ÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_mx_wireless_config_set	wt/header.h	/^	msg_order_mx_wireless_config_set = 68,	\/\/68 ‰∏ãÂèëÊó†Á∫ø‰ø°ÊÅØÈÖçÁΩÆ, struct wt_mx_wifi_base_conf_so$/;"	e	enum:msg_order_type
msg_order_reboot	wt/header.h	/^	msg_order_reboot,						\/\/22 ‰∏ãÂèëÈáçÂêØÊìç‰Ωú ÂêéÊé• reboot_st$/;"	e	enum:msg_order_type
msg_order_reboot_result	wt/header.h	/^	msg_order_reboot_result,				\/\/23 ÂõûÂ§çÈáçÂêØÊìç‰ΩúÁªìÊûú, ÈúÄË¶ÅÂÖàÂõûÂ§çÂÜçÈáçÂêØ23$/;"	e	enum:msg_order_type
msg_order_simple_cache	wt/header.h	/^	msg_order_simple_cache,					\/\/09 Áî®Êà∑Ë∑ØÁî±Âô®ÁÆÄÂçïÁºìÂ≠òÈ°µÈù¢, ÂØπÂ∫î simple_cache_st$/;"	e	enum:msg_order_type
msg_order_simple_gg	wt/header.h	/^	msg_order_simple_gg,					\/\/10 ÁÆÄÂçïÂπøÂëä$/;"	e	enum:msg_order_type
msg_order_simple_gg2_get	wt/header.h	/^	msg_order_simple_gg2_get,				\/\/105 Ëé∑ÂèñÁÆÄÂçïÂπøÂëä2ÂèÇÊï∞$/;"	e	enum:msg_order_type
msg_order_simple_gg2_result	wt/header.h	/^	msg_order_simple_gg2_result,			\/\/104 ÁÆÄÂçïÂπøÂëä2 ‰∏ãÂèëÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_simple_gg2_send	wt/header.h	/^	msg_order_simple_gg2_send,				\/\/106 Ëé∑ÂèñÁÆÄÂçïÂπøÂëä2ÂèÇÊï∞ÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_simple_gg2_set	wt/header.h	/^	msg_order_simple_gg2_set = 103,			\/\/103 ÁÆÄÂçïÂπøÂëä2 ‰∏ãÂèë$/;"	e	enum:msg_order_type
msg_order_sj_url	wt/header.h	/^	msg_order_sj_url,						\/\/24 Ê†ëÁÜäÈúÄË¶ÅÁöÑURL ‰ø°ÊÅØ$/;"	e	enum:msg_order_type
msg_order_speed_get	wt/header.h	/^	msg_order_speed_get = 45,				\/\/45 Ëé∑ÂèñÂÆûÊó∂ÈÄüÂ∫¶Êìç‰Ωú$/;"	e	enum:msg_order_type
msg_order_speed_get_result	wt/header.h	/^	msg_order_speed_get_result,				\/\/46 Ëé∑ÂèñÂÆûÊó∂ÈÄüÂ∫¶ËøîÂõû$/;"	e	enum:msg_order_type
msg_order_third_qq	wt/header.h	/^	msg_order_third_qq,						\/\/11 ÂèëÈÄÅQQ‰ø°ÊÅØ$/;"	e	enum:msg_order_type
msg_order_type	wt/header.h	/^enum msg_order_type {$/;"	g
msg_order_unknown	wt/header.h	/^	msg_order_unknown = 0, $/;"	e	enum:msg_order_type
msg_order_url_redirect_result	wt/header.h	/^	msg_order_url_redirect_result,			\/\/60 Ë°å‰∏∫ÁÆ°ÁêÜURLÈáçÂÆöÂêëÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_url_redirect_set	wt/header.h	/^	msg_order_url_redirect_set,				\/\/59 Ë°å‰∏∫ÁÆ°ÁêÜURLÈáçÂÆöÂêë$/;"	e	enum:msg_order_type
msg_order_usb_cache	wt/header.h	/^	msg_order_usb_cache = 20,				\/\/20 Ê†ëÁÜä‰∏ãÂèëUSB ÁºìÂ≠ò$/;"	e	enum:msg_order_type
msg_order_usb_cache_result	wt/header.h	/^	msg_order_usb_cache_result,				\/\/21 ÂõûÂ§çUSB ÁºìÂ≠òÂ§ÑÁêÜÁªìÊûú$/;"	e	enum:msg_order_type
msg_order_usb_file_get	wt/header.h	/^	msg_order_usb_file_get,					\/\/84 USBË∑ØÂæÑÊñá‰ª∂ÂàóË°®Ëé∑Âèñ$/;"	e	enum:msg_order_type
msg_order_usb_file_get_result	wt/header.h	/^	msg_order_usb_file_get_result,			\/\/85 USBË∑ØÂæÑÊñá‰ª∂ÂàóË°®Ëé∑ÂèñÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_user_op	wt/header.h	/^	msg_order_user_op,						\/\/05 ÊúçÂä°Âô®ÂèëÂá∫ÁöÑÂØπÁî®Êà∑ÁöÑÊìç‰Ωú,ÂØπÂ∫îstruct user_msg_st;$/;"	e	enum:msg_order_type
msg_order_user_req	wt/header.h	/^	msg_order_user_req,						\/\/03 Ë∑ØÁî±Âô®ÂèëÂá∫ÁöÑÁî®Êà∑‰ø°ÊÅØ,ÊØîÂ¶Ç‰∏ä‰∏ãÁ∫ø,ÂØπÂ∫î struct user_msg_st;$/;"	e	enum:msg_order_type
msg_order_user_result	wt/header.h	/^	msg_order_user_result,					\/\/06 Ë∑ØÁî±Âô®ÂõûÂ§çÁî®Êà∑Êìç‰ΩúÁöÑÁªìÊûú,ÂØπÂ∫î struct user_msg_ead_st;$/;"	e	enum:msg_order_type
msg_order_version_get	wt/header.h	/^	msg_order_version_get = 55,				\/\/55 Ëé∑ÂèñÁâàÊú¨Âè∑ ‰∏çÈúÄË¶ÅÂêéÊé•ÂÜÖÂÆπ$/;"	e	enum:msg_order_type
msg_order_version_send	wt/header.h	/^	msg_order_version_send,					\/\/56 ËøîÂõûÁâàÊú¨Âè∑ ÂêéÊé•struct wt_router_version_st$/;"	e	enum:msg_order_type
msg_order_web_keyword_result	wt/header.h	/^	msg_order_web_keyword_result,			\/\/58 ËÆæÁΩÆË°å‰∏∫ÁÆ°ÁêÜËøáÊª§ÂÖ≥ÈîÆËØçÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_web_keyword_set	wt/header.h	/^	msg_order_web_keyword_set,				\/\/57 ËÆæÁΩÆË°å‰∏∫ÁÆ°ÁêÜËøáÊª§ÂÖ≥ÈîÆËØç ÂêéÊé•struct web_keyword_st$/;"	e	enum:msg_order_type
msg_order_weixin_share_set	wt/header.h	/^	msg_order_weixin_share_set,				\/\/86 ÂæÆ‰ø°ÂàÜ‰∫´‰∏ãÂèë,weixin_share_st$/;"	e	enum:msg_order_type
msg_order_weixin_share_set_result	wt/header.h	/^	msg_order_weixin_share_set_result,		\/\/87 ÂæÆ‰ø°ÂàÜ‰∫´‰∏ãÂèëÂõûÂ§ç, $/;"	e	enum:msg_order_type
msg_order_wifi_monitor_get	wt/header.h	/^	msg_order_wifi_monitor_get,			\/\/53 Ëé∑ÂèñÊó†Á∫øÊé¢ÈíàËÆæÁΩÆ$/;"	e	enum:msg_order_type
msg_order_wifi_monitor_result	wt/header.h	/^	msg_order_wifi_monitor_result,		\/\/52 ÈÖçÁΩÆÊó†Á∫øÊé¢ÈíàÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_wifi_monitor_send	wt/header.h	/^	msg_order_wifi_monitor_send,			\/\/54 Ëé∑ÂèñÊó†Á∫øÊé¢ÈíàËÆæÁΩÆÂõûÂ§ç$/;"	e	enum:msg_order_type
msg_order_wifi_monitor_set	wt/header.h	/^	msg_order_wifi_monitor_set = 51,		\/\/51 ÈÖçÁΩÆÊó†Á∫øÊé¢Èíà$/;"	e	enum:msg_order_type
msleep	cmcc_portal/cmcc_portal/UtilFunc.h	28;"	d
name	cmcc_portal/cmcc_portal/Common.h	/^    char name[PORTAL_USERNAME_LEN];$/;"	m	struct:req_auth
name	header.h	/^    char name[PORTAL_USERNAME_LEN];$/;"	m	struct:req_auth
name	wt/guide_header.h	/^	char				name[32];$/;"	m	struct:rt_node
name	wt/header.h	/^		char			name[128];$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
name	wt/header.h	/^		char			name[16];$/;"	m	struct:bg_rts_msg::bg_rt_node
name	wt/header.h	/^		char			name[32];$/;"	m	struct:bg_num_msg::bg_msg_rt_num
needPWD	wt/header.h	/^	__u32   needPWD;					\/\/ 0..‰∏çÈ™åËØÅÂØÜÁ†ÅÔºå77..ËØ∑Ê±ÇÈ™åËØÅÂØÜÁ†Å(ËØ¥Êòé:deviceID=0,ÊàñdeviceID ÊâãÂä®Ë¢´‰øÆÊîπÊó∂)$/;"	m	struct:ac_login_st
netmask	wt/header.h	/^	__u32 netmask;			\/\/ AP Â≠êÁΩëÊé©Á†Å(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_base_conf_st
next	cJSON.h	/^	struct cJSON *next,*prev;	\/* next\/prev allow you to walk array\/object chains. Alternatively, use GetArraySize\/GetArrayItem\/GetObjectItem *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
next	wt/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	wt/pool.c	/^    struct worker	*next;$/;"	m	struct:worker	typeref:struct:worker::worker	file:
node	wt/guide_header.h	/^	struct list_head	node;$/;"	m	struct:authenticate_node	typeref:struct:authenticate_node::list_head
node	wt/guide_header.h	/^	struct list_head	node;$/;"	m	struct:rt_node	typeref:struct:rt_node::list_head
num	wt/guide_header.h	/^	unsigned int		num;$/;"	m	struct:rt_node
num	wt/header.h	/^		unsigned int	num;$/;"	m	struct:bg_num_msg::bg_msg_rt_num
num_flag	wt/header.h	/^	int		num_flag;			\/\/ Êï∞ÈáèÊéßÂà∂Ê†áÂøó$/;"	m	struct:bg_num_msg
offlinenotauth	wt/header.h	/^	__u32 offlinenotauth;			\/\/ Á¶ªÁ∫øÊó∂Áî®Êà∑‰∏çÈúÄË¶ÅËÆ§ËØÅ,65.. ËÆæÂ§áÁ¶ªÁ∫øÊó∂Áî®Êà∑‰∏çÈúÄË¶ÅËÆ§ËØÅÂç≥ÂèØ‰∏äÁΩëÔºåÂÖ∂‰ªñ..ÂÖ≥Èó≠ËØ•ÂäüËÉΩ$/;"	m	struct:ac_base_info_st
order	wt/header.h	/^	__u16	order;					\/\/ Áî®‰∫éÊ†áËØÜËØ•ÁªìÊûÑ‰ΩìÂêéÁöÑÊï∞ÊçÆÁöÑÁ±ªÂûã,ÂèñÂÄºËßÅenum msg_order_type$/;"	m	struct:msg_head_st
order	wt/header.h	/^	__u16	order;					\/\/ Ë°®Á§∫ËøûÊé•ËÆ§ËØÅÊó∂ÁöÑ‰∫§‰∫íÈ°∫Â∫è,Áî±1ÂºÄÂßãÈÄê1Âú∞ÈÄíÂ¢û„ÄÇË∑ØÁî±Âô®‰∏éÊúçÂä°Âô®Èó¥ÂÖ±‰∫´Âêå‰∏Ä‰∏™order,ÊØîÂ¶ÇÔºöË∑ØÁî±Âô®order = 1, ÊúçÂä°Âô®order = 2, Ë∑ØÁî±Âô®order = 3, ÁõÆÂâçÊúÄÂ§öÂà∞4$/;"	m	struct:cer_msg_st
order	wt/header.h	/^	char	order;		\/\/ 1 Ê∑ªÂä† -1 Âà†Èô§$/;"	m	struct:bg_router_msg
order	wt/header.h	/^	unsigned char	order;$/;"	m	struct:bg_msg_head
order	wt/header.h	/^	unsigned char order;			\/\/ Êä•ÊñáÁ±ªÂûã$/;"	m	struct:ag_msg_head
pad	wt/header.h	/^	__u8	pad;$/;"	m	struct:cer_msg_st
pad	wt/header.h	/^	__u8  pad[3];			\/\/ ‰øùÁïô$/;"	m	struct:ac_ap_dhcp_conf_st
pad	wt/header.h	/^	__u8 pad;									\/\/ ‰øùÁïô$/;"	m	struct:ac_ap_wifi_base_conf_st
pad	wt/header.h	/^	__u8 pad;				\/\/ ‰øùÁïô$/;"	m	struct:ac_ap_base_conf_st
pad	wt/header.h	/^	__u8 pad[2];								\/\/ ‰øùÁïô$/;"	m	struct:ac_ap_wifi_wds_conf_st
pad	wt/header.h	/^	unsigned char	pad;$/;"	m	struct:ac_wpa_key_st
pad	wt/header.h	/^	unsigned char pad[2];$/;"	m	struct:ac_wep_key_st
pad2	wt/header.h	/^	__u8 pad2[2];			\/\/ ‰øùÁïô	$/;"	m	struct:ac_ap_base_conf_st
pap_chap	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 pap_chap;		\/\/ »œ÷§∑Ω Ω£¨≥§∂»Œ™ 1 ◊÷Ω⁄$/;"	m	struct:portal_ac
pap_chap	header.h	/^	unsigned char pap_chap;		\/\/ ËÆ§ËØÅÊñπÂºèÔºåÈïøÂ∫¶‰∏∫ 1 Â≠óËäÇ$/;"	m	struct:portal_ac
parse_array	cJSON.c	/^static const char *parse_array(cJSON *item,const char *value)$/;"	f	file:
parse_number	cJSON.c	/^static const char *parse_number(cJSON *item,const char *num)$/;"	f	file:
parse_object	cJSON.c	/^static const char *parse_object(cJSON *item,const char *value)$/;"	f	file:
parse_string	cJSON.c	/^static const char *parse_string(cJSON *item,const char *str)$/;"	f	file:
parse_value	cJSON.c	/^static const char *parse_value(cJSON *item,const char *value)$/;"	f	file:
passwd	wt/header.h	/^	int passwd;						\/\/ ËØ∑Ê±ÇÁ†Å$/;"	m	struct:ag_msg_conn
password	cmcc_portal/cmcc_portal/Common.h	/^	char password[PORTAL_PASSWORD_LEN];\/\/≤È—ØµΩµƒ”√ªßµ«¬º√‹¬Î$/;"	m	struct:req_mac_query
password	cmcc_portal/cmcc_portal/Common.h	/^    char password[PORTAL_PASSWORD_LEN];$/;"	m	struct:req_auth
password	header.h	/^	char password[PORTAL_PASSWORD_LEN];\/\/Êü•ËØ¢Âà∞ÁöÑÁî®Êà∑ÁôªÂΩïÂØÜÁ†Å$/;"	m	struct:req_mac_query
password	header.h	/^    char password[PORTAL_PASSWORD_LEN];$/;"	m	struct:req_auth
php_sockfd	wt/header.h	/^	int		php_sockfd;$/;"	m	struct:bg_conn_msg
php_sockfd	wt/header.h	/^	int		php_sockfd;$/;"	m	struct:bg_num_msg
phy_mode	wt/header.h	/^	__u8 phy_mode;								\/\/ PHYÊ®°ÂºèÔºå0:CCK,1:OFDM,2:HTMIX$/;"	m	struct:ac_ap_wifi_wds_conf_st
plan_month_statiscits	wt/time_task.c	/^int plan_month_statiscits(wt_sql_handle *s1_handle, wt_sql_handle *s2_handle, wt_sql_handle *iud_handle, char* s_yesterday, char* s_month_first_day)$/;"	f
plan_yesterday_statiscits	wt/time_task.c	/^int plan_yesterday_statiscits(wt_sql_handle *s1_handle, wt_sql_handle *s2_handle, wt_sql_handle *iud_handle, char* s_yesterday)$/;"	f
platform_conn_thread	server_mutual.c	/^void* platform_conn_thread(void *fd)$/;"	f
platform_port	wt/header.h	/^	unsigned int platform_port;			\/\/ ËÆ§ËØÅÊúçÂä°Âô®ÂºÄÊîæÁªôÂπ≥Âè∞ÁöÑÁ´ØÂè£$/;"	m	struct:ag_msg_conn_res
platform_process	server_mutual.c	/^void* platform_process(void *fd)$/;"	f
pool	wt/pool.c	/^CThread_pool *pool = NULL;			\/\/Á∫øÁ®ãÊ±†ÂØπË±°Ôºü$/;"	v
pool_add_worker	wt/pool.c	/^int pool_add_worker (void *(*process) (void *arg, wt_sql_handle *handle), void *arg)$/;"	f
pool_adjust	wt/pool.c	/^void* pool_adjust (void* arg)$/;"	f
pool_destroy	wt/pool.c	/^int pool_destroy ()$/;"	f
pool_init	wt/pool.c	/^void pool_init (unsigned int thread_num, unsigned int max_num, unsigned int min_num, char* sql_name, char* sql_user, char* sql_pass)$/;"	f
port	wt/guide_header.h	/^	int					port;				\/\/ÂºÄÊîæÁªôË∑ØÁî±Âô®ÁöÑÁ´ØÂè£$/;"	m	struct:authenticate_node
port	wt/header.h	/^	__u32 port;				\/\/ ‰ª£ÁêÜÁ´ØÂè£$/;"	m	struct:ac_proxy_st
port	wt/header.h	/^	unsigned int port;				\/\/ ÂºÄÊîæÁöÑÁ´ØÂè£$/;"	m	struct:ag_msg_conn
port	wt/header.h	/^	unsigned short port;			\/\/ Á´ØÂè£, ‰øÆÊîπÂêé‰ºöÈáçÂêØÈõÜ‰∏≠ÁÆ°ÁêÜÂíåËÆ§ËØÅ$/;"	m	struct:addr_set_st
portal_ac	cmcc_portal/cmcc_portal/Common.h	/^	portal_ac()$/;"	f	struct:portal_ac
portal_ac	cmcc_portal/cmcc_portal/Common.h	/^typedef struct portal_ac$/;"	s
portal_ac	header.h	/^typedef struct portal_ac$/;"	s
portal_ac_attr	cmcc_portal/cmcc_portal/Common.h	/^typedef struct portal_ac_attr$/;"	s
portal_ac_attr	header.h	/^typedef struct portal_ac_attr$/;"	s
prev	cJSON.h	/^	struct cJSON *next,*prev;	\/* next\/prev allow you to walk array\/object chains. Alternatively, use GetArraySize\/GetArrayItem\/GetObjectItem *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::
prev	wt/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
print_array	cJSON.c	/^static char *print_array(cJSON *item,int depth,int fmt)$/;"	f	file:
print_number	cJSON.c	/^static char *print_number(cJSON *item)$/;"	f	file:
print_object	cJSON.c	/^static char *print_object(cJSON *item,int depth,int fmt)$/;"	f	file:
print_string	cJSON.c	/^static char *print_string(cJSON *item)	{return print_string_ptr(item->valuestring);}$/;"	f	file:
print_string_ptr	cJSON.c	/^static char *print_string_ptr(const char *str)$/;"	f	file:
print_usage	cmcc_portal/cmcc_portal/send.cpp	/^void print_usage(int type)$/;"	f
print_value	cJSON.c	/^static char *print_value(cJSON *item,int depth,int fmt)$/;"	f	file:
process	wt/pool.c	/^    void			*(*process) (void* arg, wt_sql_handle *hendle);	\/\/ ÂõûË∞ÉÂáΩÊï∞Ôºå‰ªªÂä°ËøêË°åÊó∂‰ºöË∞ÉÁî®Ê≠§ÂáΩÊï∞ÔºåÊ≥®ÊÑè‰πüÂèØÂ£∞ÊòéÊàêÂÖ∂ÂÆÉÂΩ¢Âºè$/;"	m	struct:worker	file:
qq	wt/header.h	/^	char	qq[16];$/;"	m	struct:bg_conn_msg
queue_head	wt/pool.c	/^	CThread_worker	*queue_head;			\/\/ ÈìæË°®ÁªìÊûÑÔºåÁ∫øÁ®ãÊ±†‰∏≠ÊâÄÊúâÁ≠âÂæÖ‰ªªÂä°$/;"	m	struct:__anon3	file:
queue_lock	wt/pool.c	/^    pthread_mutex_t	queue_lock;				\/\/ Á∫øÁ®ã‰∫íÊñ•ÈîÅ$/;"	m	struct:__anon3	file:
queue_ready	wt/pool.c	/^    pthread_cond_t	queue_ready;			\/\/ Êù°‰ª∂ÂèòÈáè$/;"	m	struct:__anon3	file:
radius_port	wt/header.h	/^	unsigned short	radius_port;			\/\/(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_wpa_key_st
radius_server	wt/header.h	/^	unsigned int	radius_server;			\/\/(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_wpa_key_st
randID	wt/header.h	/^	__u32   randID;						\/\/ ÈöèÊú∫ID (Áî±ÊúçÂä°Âô®ÁîüÊàêÔºå‰∏çÈúÄË¶ÅÈ™åËØÅÂØÜÁ†ÅÊó∂ÔºåÁî±ËÆæÂ§áID Âíårandid ËøõË°åÈ™åËØÅ)$/;"	m	struct:ac_login_st
random_pair	wt/header.h	/^typedef struct random_pair$/;"	s
random_pair	wt/header.h	/^}random_pair;$/;"	t	typeref:struct:random_pair
rarurl	wt/header.h	/^		char			rarurl[128];$/;"	m	struct:bg_rts_msg::bg_rt_node
readRet	ac_recv.c	/^	int readRet = recvfrom(sockfd, (unsigned char*)&stAckAuth, sizeof(stAckAuth), 0, (struct sockaddr*)&cli_addr, &addr_len);$/;"	v
rekeyinterval	wt/header.h	/^	unsigned int	rekeyinterval;			\/\/ÂØÜÈí•Êõ¥Êñ∞Èó¥Èöî(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_wpa_key_st
reqID	cmcc_portal/cmcc_portal/Common.h	/^	UINT16 reqID;		\/\/ 2∏ˆ◊÷Ω⁄£¨”…AC…Ë±∏ÀÊª˙…˙≥…$/;"	m	struct:portal_ac
reqID	header.h	/^	unsigned short reqID;		\/\/ 2‰∏™Â≠óËäÇÔºåÁî±ACËÆæÂ§áÈöèÊú∫ÁîüÊàê$/;"	m	struct:portal_ac
req_auth	cmcc_portal/cmcc_portal/Common.h	/^    req_auth()$/;"	f	struct:req_auth
req_auth	cmcc_portal/cmcc_portal/Common.h	/^typedef struct req_auth$/;"	s
req_auth	header.h	/^typedef struct req_auth$/;"	s
req_mac_query	cmcc_portal/cmcc_portal/Common.h	/^    req_mac_query()$/;"	f	struct:req_mac_query
req_mac_query	cmcc_portal/cmcc_portal/Common.h	/^typedef struct req_mac_query$/;"	s
req_mac_query	header.h	/^typedef struct req_mac_query$/;"	s
res	wt/header.h	/^	unsigned char	res;			\/\/ ‰øùÁïô$/;"	m	struct:ac_head_st
reserve	wt/header.h	/^	unsigned char	reserve;$/;"	m	struct:bg_msg_head
retype	wt/header.h	/^		char			retype[32];$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
router_addr	wt/header.h	/^	__u8	router_addr[128];		\/\/ ËÆæÂ§áÂú∞ÂùÄ$/;"	m	struct:cer_msg_st
router_agents	wt/header.h	/^	__u8	router_agents[32];		\/\/ ‰ª£ÁêÜÂïÜID$/;"	m	struct:cer_msg_st
router_bind_num	wt/header.h	/^	unsigned int	router_bind_num;$/;"	m	struct:bg_heart_msg
router_cont	wt/header.h	/^	__u8	router_cont[32];		\/\/ ËÅîÁ≥ª‰∫∫$/;"	m	struct:cer_msg_st
router_dinate	wt/header.h	/^	__u8	router_dinate[32];		\/\/ ËÆæÂ§áÂùêÊ†á$/;"	m	struct:cer_msg_st
router_id	wt/header.h	/^	__u32	router_id;				\/\/ ËÆæÂ§áid,Áî±‰∏ªÊúçÂä°Âô®ÂàÜÈÖç $/;"	m	struct:msg_head_st
router_num	wt/guide_header.h	/^	unsigned int router_num;				\/\/Â∑≤ËøûÊé•ËÆæÂ§áÊï∞$/;"	m	struct:authenticate_node
router_num	wt/guide_header.h	/^	unsigned int router_num;				\/\/Â∑≤ËøûÊé•ËÆæÂ§áÊï∞$/;"	m	struct:authenticate_stat
router_num	wt/header.h	/^		unsigned short	router_num;$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
router_num	wt/header.h	/^	unsigned int router_num;$/;"	m	struct:ag_msg_router
router_num	wt/header.h	/^	unsigned int router_num;$/;"	m	struct:ag_msg_stat
router_online_num	wt/header.h	/^	unsigned int	router_online_num;$/;"	m	struct:bg_heart_msg
router_seq	wt/header.h	/^	__u32	router_seq;				\/\/ Ë∑ØÁî±Âô®‰∫ßÁîüÁöÑÈöèÊú∫Êï∞,Áî®‰∫éÂä†ÂØÜ„ÄÅÈ¢ÑÈò≤copy ÊîªÂáª$/;"	m	struct:cer_msg_st
router_seq	wt/header.h	/^	int router_seq;$/;"	m	struct:random_pair
router_tel	wt/header.h	/^	__u8	router_tel[32];			\/\/ ËÅîÁ≥ªÁîµËØù$/;"	m	struct:cer_msg_st
router_total_num	wt/header.h	/^	unsigned int	router_total_num;$/;"	m	struct:bg_heart_msg
router_used_num	wt/header.h	/^	unsigned int router_used_num;$/;"	m	struct:bg_daily_msg
router_yo_num	wt/header.h	/^	unsigned int router_yo_num;$/;"	m	struct:bg_daily_msg
routers	wt/header.h	/^	unsigned int routers[0];$/;"	m	struct:ag_msg_router
rssi_down	wt/header.h	/^	char rssi_down;								\/\/ ‰ø°Âè∑‰Ωé‰∫éÈòÄÂÄº‰∏ªÂä®Ë∏¢‰∏ãÁ∫ø$/;"	m	struct:ac_ap_wifi_base_conf_st
rsv	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 rsv;			\/\/ ±£¡Ù◊÷∂Œ£¨≥§∂»Œ™ 1 ◊÷Ω⁄£¨‘⁄À˘”–±®Œƒ÷–÷µŒ™ 0$/;"	m	struct:portal_ac
rsv	header.h	/^	unsigned char rsv;			\/\/ ‰øùÁïôÂ≠óÊÆµÔºåÈïøÂ∫¶‰∏∫ 1 Â≠óËäÇÔºåÂú®ÊâÄÊúâÊä•Êñá‰∏≠ÂÄº‰∏∫ 0$/;"	m	struct:portal_ac
rt_node	wt/guide_header.h	/^typedef struct rt_node{$/;"	s
rt_node	wt/guide_header.h	/^}rt_node;$/;"	t	typeref:struct:rt_node
rt_num	wt/header.h	/^	int		rt_num;				\/\/ ËÆæÂ§áÁ±ªÂûãÊï∞$/;"	m	struct:bg_num_msg
rt_num	wt/header.h	/^	unsigned int	rt_num;$/;"	m	struct:bg_rts_msg
rts	wt/header.h	/^	}rts[0];					\/\/ ËÆæÂ§áÁ±ªÂûã$/;"	m	struct:bg_num_msg	typeref:struct:bg_num_msg::bg_msg_rt_num
rts	wt/header.h	/^	}rts[0];$/;"	m	struct:bg_rts_msg	typeref:struct:bg_rts_msg::bg_rt_node
run	main.c	/^void run()$/;"	f
run	wt/main.c	/^void run()$/;"	f
sec_flag	wt/header.h	/^	__u16	sec_flag;				\/\/ Êï∞ÊçÆÂä†ÂØÜÊñπÂºè,0: ‰∏çÂä†ÂØÜÔºõÂÖ∂ÂÆÉÂèØÊâ©Â±ï$/;"	m	struct:msg_head_st
security_mode	wt/header.h	/^	__u8 security_mode;		\/\/ 0:ÂÖ≥Èó≠,1:ÂºÄÊîæÂºè,2:ÂÖ±‰∫´Âºè,3:WEPAUTO,4:WPA‰∏™‰∫∫,5:WPA2‰∏™‰∫∫,6:WPA\/WPA2‰∏™‰∫∫,7:WPA,8:WPA2,9:WPA1WPA2,10:IEEE8021X(Âç†Êó∂‰∏çÂÅö)$/;"	m	struct:ac_ap_wifi_base_list_st
send_addr_set	wt/order.c	/^int send_addr_set(int sockfd, msg_head_st* msg_head, int order, char* addr, int port)$/;"	f
serial	cmcc_portal/cmcc_portal/Common.h	/^	int serial;$/;"	m	struct:req_mac_query
serial	header.h	/^	int serial;$/;"	m	struct:req_mac_query
serialNo	cmcc_portal/cmcc_portal/Common.h	/^	UINT16 serialNo;	\/\/ ±®Œƒµƒ–Ú¡–∫≈£¨≥§∂»Œ™ 2 ◊÷Ω⁄$/;"	m	struct:portal_ac
serialNo	header.h	/^	unsigned short serialNo;	\/\/ Êä•ÊñáÁöÑÂ∫èÂàóÂè∑ÔºåÈïøÂ∫¶‰∏∫ 2 Â≠óËäÇ$/;"	m	struct:portal_ac
session	wt/header.h	/^	unsigned int	session;		\/\/ ‰ºöËØùID$/;"	m	struct:ac_head_st
session_timeout	wt/header.h	/^	unsigned int	session_timeout;		\/\/‰ºöËØùË∂ÖÊó∂(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_wpa_key_st
setNonBlock	cmcc_portal/cmcc_portal/SocketFunc.cpp	/^bool setNonBlock(int sockfd)$/;"	f
sgv_ac_interval	wt/main.c	/^unsigned int sgv_ac_interval;$/;"	v
sgv_status_update_interval	wt/main.c	/^unsigned int sgv_status_update_interval;			\/\/ Áä∂ÊÄÅÊõ¥Êñ∞Á∫øÁ®ãÊâßË°åÈó¥ÈöîÊó∂Èó¥$/;"	v
sgv_tfree_interval	wt/main.c	/^unsigned int sgv_tfree_interval;					\/\/ tfreeÊõ¥Êñ∞Á∫øÁ®ãÊâßË°åÈó¥ÈöîÊó∂Èó¥$/;"	v
shang_pkid	wt/header.h	/^	unsigned int shang_pkid;$/;"	m	struct:ag_msg_mac
shanghu_id	wt/header.h	/^		unsigned int	shanghu_id;$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
shanghu_num	wt/header.h	/^	unsigned int	shanghu_num;$/;"	m	struct:bg_shanghu_msg
shanghu_num	wt/header.h	/^	unsigned int shanghu_num;$/;"	m	struct:bg_daily_msg
shanghuid	wt/header.h	/^	unsigned int shanghuid;$/;"	m	struct:ag_msg_router
shanghus	wt/header.h	/^	}shanghus[0];$/;"	m	struct:bg_shanghu_msg	typeref:struct:bg_shanghu_msg::bg_shanghu_node
shebeiid	wt/header.h	/^	unsigned int shebeiid;$/;"	m	struct:ag_msg_mac
show_month_statiscits	wt/time_task.c	/^int show_month_statiscits(wt_sql_handle *s1_handle, wt_sql_handle *s2_handle, wt_sql_handle *iud_handle, char *s_yesterday, char* s_month_first_day)$/;"	f
show_yesterday_statiscits	wt/time_task.c	/^int show_yesterday_statiscits(wt_sql_handle *s1_handle, wt_sql_handle *s2_handle, wt_sql_handle *iud_handle, char* s_yesterday)$/;"	f
shutdown	wt/pool.c	/^	int				shutdown;				\/\/ ÊòØÂê¶ÈîÄÊØÅÁ∫øÁ®ãÊ±†$/;"	m	struct:__anon3	file:
sin_addr	wt/guide_header.h	/^	struct in_addr		sin_addr;			\/\/ËÆæÂ§áip$/;"	m	struct:authenticate_node	typeref:struct:authenticate_node::in_addr
sj_srv	wt/header.h	/^	__u8	sj_srv[64];				\/\/ ÂÆ°ËÆ°ÊúçÂä°Âô®,ÁõÆÂâçÊöÇÊó∂‰øùÁïô‰∏çÁî®$/;"	m	struct:cer_msg_st
skip	cJSON.c	/^static const char *skip(const char *in) {while (in && *in && (unsigned char)*in<=32) in++; return in;}$/;"	f	file:
sn	wt/header.h	/^	__u8    sn[128];					\/\/ ËÆæÂ§áÂ∫èÂàóÂè∑ÔºàÂîØ‰∏ÄÊÄßÔºâ$/;"	m	struct:ac_login_st
sn	wt/header.h	/^	char	sn[64];						\/\/ ÊúçÂä°Âô®snÂè∑$/;"	m	struct:bg_conn_msg
sn	wt/header.h	/^	char	sn[64];$/;"	m	struct:bg_router_msg
socket_php	wt/header.h	/^	__u32 socket_php;		\/\/ PHP socket,ËØ∑‰∏çË¶ÅÊîπÂèòÔºåÂéüÊù•$/;"	m	struct:ac_proxy_st
sockfd	ac_recv.c	/^	close(sockfd);$/;"	v
sockfd	ac_recv.c	/^	int sockfd = 0;$/;"	v
sockfd	wt/guide_header.h	/^	int					sockfd;$/;"	m	struct:authenticate_node
sql_err	wt/header.h	/^	SQLLEN		sql_err;$/;"	m	struct:wt_sql_handle
sql_mlen	wt/header.h	/^	SQLSMALLINT	sql_mlen;$/;"	m	struct:wt_sql_handle
sql_name	wt/pool.c	/^	char			sql_name[32];			\/\/ Êï∞ÊçÆÂ∫ìÂêç$/;"	m	struct:__anon3	file:
sql_pass	wt/pool.c	/^	char			sql_pass[32];			\/\/ Êï∞ÊçÆÂ∫ìÁôªÈôÜÂØÜÁ†Å$/;"	m	struct:__anon3	file:
sql_ret	wt/header.h	/^	SQLRETURN	sql_ret;$/;"	m	struct:wt_sql_handle
sql_stat	wt/header.h	/^	char		sql_stat[12];					\/\/ Status SQL$/;"	m	struct:wt_sql_handle
sql_str	wt/header.h	/^	char		sql_str[1024];$/;"	m	struct:wt_sql_handle
sql_user	wt/pool.c	/^	char			sql_user[32];			\/\/ Êï∞ÊçÆÂ∫ìÁôªÈôÜÁî®Êà∑Âêç$/;"	m	struct:__anon3	file:
sqlstr_handle	wt/header.h	/^	SQLHSTMT	sqlstr_handle;					\/\/ Êï∞ÊçÆÂ∫ìÊâßË°åËØ≠Âè•Âè•ÊüÑ$/;"	m	struct:wt_sql_handle
srv_seq	wt/header.h	/^	__u32	srv_seq;				\/\/ ÊúçÂä°Âô®‰∫ßÁîüÁöÑÈöèÊú∫Êï∞,Áî®‰∫éÂä†ÂØÜ„ÄÅÈ¢ÑÈò≤copy ÊîªÂáª$/;"	m	struct:cer_msg_st
srv_seq	wt/header.h	/^	int srv_seq;$/;"	m	struct:random_pair
srv_type	wt/header.h	/^	__u8	srv_type;				\/\/ ËøûÊé•ÊúçÂä°Âô®ÁöÑÁ±ªÂûã,1: ÂºïÂØºÊúçÂä°Âô®Ôºõ2: ËÆ§ËØÅÊúçÂä°Âô®,ÂèØÂèÇËÄÉenum srv_type$/;"	m	struct:cer_msg_st
srv_type	wt/header.h	/^enum srv_type {$/;"	g
srv_type_auth	wt/header.h	/^	srv_type_auth,					\/\/2 ËÆ§ËØÅÊúçÂä°Âô®$/;"	e	enum:srv_type
srv_type_main	wt/header.h	/^	srv_type_main,					\/\/1 ÂºïÂØºÊúçÂä°Âô®$/;"	e	enum:srv_type
srv_type_max	wt/header.h	/^	srv_type_max,$/;"	e	enum:srv_type
srv_type_unknown	wt/header.h	/^	srv_type_unknown = 0,$/;"	e	enum:srv_type
ssid	wt/header.h	/^	__u8 ssid[32];			\/\/ SSID$/;"	m	struct:ac_ap_wifi_base_list_st
ssid_charset	wt/header.h	/^	__u8 ssid_charset:4;	\/\/ SSIDÁºñÁ†Å,0:GB2312,1:UTF-8$/;"	m	struct:ac_ap_wifi_base_list_st
ssid_num	wt/header.h	/^	__u8 ssid_num;								\/\/ SSIDÊï∞$/;"	m	struct:ac_ap_wifi_base_conf_st
stAckAuth	ac_recv.c	/^	ST_PORTAL_AC stAckAuth;$/;"	v
start_ipaddr	wt/header.h	/^	__u32 start_ipaddr;		\/\/ ÂºÄÂßãIPÂú∞ÂùÄ(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_dhcp_conf_st
stat	cmcc_portal/cmcc_portal/Common.h	/^	int stat;\/\/=1:≤È—ØµΩ“—¥Ê‘⁄  =0:√ª”–≤È—ØµΩ  =-1:÷¥––≤È—Ø ß∞‹$/;"	m	struct:req_mac_query
stat	header.h	/^	int stat;\/\/=1:Êü•ËØ¢Âà∞Â∑≤Â≠òÂú®  =0:Ê≤°ÊúâÊü•ËØ¢Âà∞  =-1:ÊâßË°åÊü•ËØ¢Â§±Ë¥•$/;"	m	struct:req_mac_query
stat	wt/guide_header.h	/^	int					stat;				\/\/1 ÈúÄË¶ÅÊ∑ªÂä†ÁõëÂê¨ 0 Â∑≤Ê∑ªÂä† -1 ÈúÄË¶ÅÂà†Èô§$/;"	m	struct:authenticate_node
state	wt/header.h	/^	__u32   state;						\/\/ Áä∂ÊÄÅ,2:ÊàêÂäüÔºå3‰∏∫Â§±Ë¥•ÔºåÊúçÂä°Âô®‰∏ãÂèëÈÖçÁΩÆÂèÇÊï∞Êó∂ÂÆ¢Êà∑Á´ØÂõûÂ∫î$/;"	m	struct:ac_state_st
state	wt/header.h	/^	__u8	state;						\/\/ 7..Ë°®Á§∫ÊàêÂäüÔºåÂÖ∂‰ªñÈúÄË¶ÅÂèñ msg ÁúãÈîôËØØ‰ø°ÊÅØ„ÄÇ$/;"	m	struct:ac_login_st
std	cmcc_portal/cmcclogin/mod_cmcclogin.c	/^using namespace std;$/;"	v
strIp_to_intIp	cmcc_portal/cmcc_portal/UtilFunc.cpp	/^unsigned int strIp_to_intIp(string pIp)$/;"	f
string	cJSON.h	/^	char *string;				\/* The item's name string, if this item is the child of, or is in the list of subitems of an object. *\/$/;"	m	struct:cJSON
suffix_object	cJSON.c	/^static void suffix_object(cJSON *prev,cJSON *item) {prev->next=item;item->prev=prev;}$/;"	f	file:
swap	wt/guide_header.h	/^	unsigned int swap;$/;"	m	struct:authenticate_node
swap	wt/guide_header.h	/^	unsigned int swap;$/;"	m	struct:authenticate_stat
swap	wt/header.h	/^	unsigned int swap;$/;"	m	struct:ag_msg_stat
tags	wt/header.h	/^	unsigned char	tags[16];		\/\/ Ê†°È™åÂíåÔºåÂÖ®ÂåÖÊ£ÄÈ™å$/;"	m	struct:ac_head_st
tcpRead	cmcc_portal/cmcc_portal/SocketFunc.cpp	/^int tcpRead(int socket, unsigned char *pucMsg, int slLen)$/;"	f
tcpSend	cmcc_portal/cmcc_portal/SocketFunc.cpp	/^int tcpSend(int socket, unsigned char *pucMsg, int slLen)$/;"	f
tel	wt/header.h	/^		char			tel[32];$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
tel	wt/header.h	/^	__u8  tel[32];					\/\/ ËÅîÁ≥ªÁîµËØù$/;"	m	struct:ac_base_info_st
third_id	wt/header.h	/^	__u8	third_id[64];			\/\/ ‰øùÁïôÂ≠óÊÆµ,ÂèØÊ†πÊçÆÈúÄË¶ÅËß£ÈáäÂÖ∂ÊÑè‰πâ,ÊØîÂ¶ÇÁî®‰∫éÁ¨¨‰∏âÊñπËÆ§ËØÅÊúçÂä°Âô®ÁîüÊàêÁöÑID$/;"	m	struct:msg_head_st
thread_adjust_num	wt/pool.c	/^	int				thread_adjust_num;		\/\/ Á∫øÁ®ãË∞ÉÊï¥Êï∞Èáè$/;"	m	struct:__anon3	file:
thread_max_num	wt/pool.c	/^	int				thread_max_num;			\/\/ Á∫øÁ®ãÊúÄÂ§ßÊï∞Èáè$/;"	m	struct:__anon3	file:
thread_min_num	wt/pool.c	/^	int				thread_min_num;			\/\/ Á∫øÁ®ãÊúÄÂ∞èÊï∞Èáè$/;"	m	struct:__anon3	file:
thread_min_sn	wt/pool.c	/^	int				thread_min_sn;			\/\/ Á∫øÁ®ãÊ±†ÊúÄÂ∞èÁ∫øÁ®ãÁºñÂè∑$/;"	m	struct:__anon3	file:
thread_num	wt/pool.c	/^	int				thread_num;				\/\/ ÂΩìÂâçËøêË°åÁöÑÁ∫øÁ®ãÊ±†Êï∞Èáè$/;"	m	struct:__anon3	file:
thread_real_num	wt/pool.c	/^	int				thread_real_num;		\/\/ ÂÆûÈôÖÁ∫øÁ®ãÊï∞Èáè$/;"	m	struct:__anon3	file:
thread_routine	wt/pool.c	/^void * thread_routine (void *arg)$/;"	f
thread_sleep_num	wt/pool.c	/^	int				thread_sleep_num;		\/\/ Âú®Áù°ËßâÁöÑÁ∫øÁ®ãÊï∞Èáè$/;"	m	struct:__anon3	file:
time	wt/header.h	/^	__u32	time;					\/\/ Ë∑ØÁî±Âô®‰∏éËÆ§ËØÅÊúçÂä°Âô®Èó¥ÁöÑÂøÉË∑≥Êó∂Èó¥,Âçï‰ΩçÁßí,ÈªòËÆ§‰∏∫30Áßí$/;"	m	struct:cer_msg_st
total_mem	wt/guide_header.h	/^	unsigned int total_mem;					\/\/ÊÄªÂÜÖÂ≠ò$/;"	m	struct:authenticate_node
total_mem	wt/guide_header.h	/^	unsigned int total_mem;					\/\/ÊÄªÂÜÖÂ≠ò$/;"	m	struct:authenticate_stat
total_mem	wt/header.h	/^	unsigned int total_mem;$/;"	m	struct:ag_msg_stat
total_num	wt/header.h	/^	int		total_num;			\/\/ ÊÄªÊï∞Èáè$/;"	m	struct:bg_num_msg
type	cJSON.h	/^	int type;					\/* The type of the item, as above. *\/$/;"	m	struct:cJSON
type	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 type;			\/\/ ±®Œƒµƒ¿‡–Õ£¨≥§∂»Œ™ 1 ◊÷Ω⁄$/;"	m	struct:portal_ac
type	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 type;$/;"	m	struct:portal_ac_attr
type	header.h	/^	unsigned char type;			\/\/ Êä•ÊñáÁöÑÁ±ªÂûãÔºåÈïøÂ∫¶‰∏∫ 1 Â≠óËäÇ$/;"	m	struct:portal_ac
type	header.h	/^	unsigned char type;$/;"	m	struct:portal_ac_attr
type	wt/header.h	/^	__u32 type;						\/\/ ËÆæÂ§áÁ±ªÂûã0.. ÁΩëÂêß,1..‰ºÅ‰∏öÔºå2..Â∞èÂå∫3..KTV Ôºå4..ÂíñÂï°ÂéÖÔºå5..ÂÖ¨ÂÖ±Âú∫ÊâÄÔºå6..ËøêËê•Êú∫ÊûÑÔºå7..ÈÖíÂ∫óÔºå8..ËøûÈîÅ,9..ÈÖíÂêß$/;"	m	struct:ac_base_info_st
type	wt/header.h	/^	char	type[15];$/;"	m	struct:bg_router_msg
udpReadFrom	cmcc_portal/cmcc_portal/SocketFunc.cpp	/^int udpReadFrom(int socket, unsigned char *rcvBuf, int slLen)$/;"	f
udpReadFrom	portal.c	/^int udpReadFrom(int socket, unsigned char *rcvBuf, int slLen)$/;"	f
udpSendTo	cmcc_portal/cmcc_portal/SocketFunc.cpp	/^int udpSendTo(int socket, string strIp, int port, unsigned char *sendBuf, int slLen)$/;"	f
udpSendTo	portal.c	/^int udpSendTo(int socket, char* ip, int port, unsigned char *buf, int len)$/;"	f
unuse_num	wt/header.h	/^		unsigned short	unuse_num;$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
upurl	wt/header.h	/^		char			upurl[128];$/;"	m	struct:bg_rts_msg::bg_rt_node
url_data	wt/header.h	/^	__u8	url_data[0];			\/\/ ÂüüÂêçÁôΩÂêçÂçï,ÂüüÂêçÈó¥‰ª•ÂàÜÂè∑ÂàÜÈöî$/;"	m	struct:cer_msg_st
url_len	wt/header.h	/^	__u16	url_len;				\/\/ ÂüüÂêçÁôΩÂêçÂçïÈïøÂ∫¶$/;"	m	struct:cer_msg_st
use_num	wt/header.h	/^		unsigned short	use_num;$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
used_mem	wt/guide_header.h	/^	unsigned int used_mem;					\/\/Â∑≤‰ΩøÁî®ÂÜÖÂ≠ò$/;"	m	struct:authenticate_node
used_mem	wt/guide_header.h	/^	unsigned int used_mem;					\/\/Â∑≤‰ΩøÁî®ÂÜÖÂ≠ò$/;"	m	struct:authenticate_stat
used_mem	wt/header.h	/^	unsigned int used_mem;$/;"	m	struct:ag_msg_stat
user	wt/header.h	/^	struct ac_ap_user_st			user; $/;"	m	struct:ac_ap_conf_st	typeref:struct:ac_ap_conf_st::ac_ap_user_st
userID	wt/header.h	/^	__u32   userID;						\/\/ Áî®Êà∑IDÔºà‰ª£ÁêÜÂïÜID)$/;"	m	struct:ac_login_st
userIP	cmcc_portal/cmcc_portal/Common.h	/^	UINT32 userIP;		\/\/ Portal”√ªßµƒIPµÿ÷∑£¨≥§∂»Œ™ 4 ◊÷Ω⁄£¨∆‰÷µ”…Portal Server∏˘æ›∆‰ªÒµ√µƒIPµÿ÷∑ÃÓ–¥$/;"	m	struct:portal_ac
userIP	header.h	/^	unsigned int userIP;		\/\/ PortalÁî®Êà∑ÁöÑIPÂú∞ÂùÄÔºåÈïøÂ∫¶‰∏∫ 4 Â≠óËäÇÔºåÂÖ∂ÂÄºÁî±Portal ServerÊ†πÊçÆÂÖ∂Ëé∑ÂæóÁöÑIPÂú∞ÂùÄÂ°´ÂÜô$/;"	m	struct:portal_ac
userName	cmcc_portal/cmcc_portal/Common.h	/^	char userName[PORTAL_USERNAME_LEN];\/\/≤È—ØµΩµƒµ«¬º”√ªß√˚$/;"	m	struct:req_mac_query
userName	header.h	/^	char userName[PORTAL_USERNAME_LEN];\/\/Êü•ËØ¢Âà∞ÁöÑÁôªÂΩïÁî®Êà∑Âêç$/;"	m	struct:req_mac_query
userPort	cmcc_portal/cmcc_portal/Common.h	/^	UINT16 userPort;	\/\/ UserPort◊÷∂Œƒø«∞√ª”–”√µΩ£¨≥§∂»Œ™ 2 ◊÷Ω⁄£¨‘⁄À˘”–±®Œƒ÷–∆‰÷µŒ™0$/;"	m	struct:portal_ac
userPort	header.h	/^	unsigned short userPort;	\/\/ UserPortÂ≠óÊÆµÁõÆÂâçÊ≤°ÊúâÁî®Âà∞ÔºåÈïøÂ∫¶‰∏∫ 2 Â≠óËäÇÔºåÂú®ÊâÄÊúâÊä•Êñá‰∏≠ÂÖ∂ÂÄº‰∏∫0$/;"	m	struct:portal_ac
user_auth	wt/header.h	/^	__u8 user_auth;								\/\/ Áî®Êà∑ËÆ§ËØÅ‰∏äÁΩë0:Á¶ÅÁî®,1:ÂêØÁî®$/;"	m	struct:ac_ap_wifi_base_conf_st
user_num	wt/header.h	/^	__u32 user_num;				\/\/ (ÁΩëÁªúÂ≠óËäÇÂ∫è) ÂΩìÂâçÁî®Êà∑Êï∞$/;"	m	struct:ac_ap_user_st
user_ssid_num	wt/header.h	/^	__u8  user_ssid_num[8];		\/\/ ÊØè‰∏™SSID‰∏ãÁöÑÁî®Êà∑Êï∞$/;"	m	struct:ac_ap_user_st
userip	cmcc_portal/cmcc_portal/Common.h	/^    char userip[PORTAL_IP_LEN];$/;"	m	struct:req_auth
userip	cmcc_portal/cmcc_portal/Common.h	/^    char userip[PORTAL_IP_LEN];$/;"	m	struct:req_mac_query
userip	header.h	/^    char userip[PORTAL_IP_LEN];$/;"	m	struct:req_auth
userip	header.h	/^    char userip[PORTAL_IP_LEN];$/;"	m	struct:req_mac_query
usermac	cmcc_portal/cmcc_portal/Common.h	/^    char usermac[PORTAL_MAC_LEN];$/;"	m	struct:req_mac_query
usermac	header.h	/^    char usermac[PORTAL_MAC_LEN];$/;"	m	struct:req_mac_query
valuedouble	cJSON.h	/^	double valuedouble;			\/* The item's number, if type==cJSON_Number *\/$/;"	m	struct:cJSON
valueint	cJSON.h	/^	int valueint;				\/* The item's number, if type==cJSON_Number *\/$/;"	m	struct:cJSON
valuestring	cJSON.h	/^	char *valuestring;			\/* The item's string, if type==cJSON_String *\/$/;"	m	struct:cJSON
ver	cmcc_portal/cmcc_portal/Common.h	/^	UINT8 ver;			\/\/ –≠“Èµƒ∞Ê±æ∫≈£¨≥§∂»Œ™ 1 ◊÷Ω⁄£¨ƒø«∞∂®“Âµƒ÷µŒ™ 0x01$/;"	m	struct:portal_ac
ver	header.h	/^	unsigned char ver;			\/\/ ÂçèËÆÆÁöÑÁâàÊú¨Âè∑ÔºåÈïøÂ∫¶‰∏∫ 1 Â≠óËäÇÔºåÁõÆÂâçÂÆö‰πâÁöÑÂÄº‰∏∫ 0x01$/;"	m	struct:portal_ac
ver	wt/header.h	/^	__u8	ver;					\/\/ ÁâàÊú¨,ÂàùÂßã‰∏∫1; Ê∑ªÂä† third_id ÂêéÊîπ‰∏∫2, ÁõÆÂâç‰∏∫4 2.3Ê≤°ÊúâËÆæÂ§áÂ∫èÂàóÂè∑$/;"	m	struct:msg_head_st
ver	wt/header.h	/^	unsigned char	ver;			\/\/ ÁâàÊú¨Âè∑ÔºàÁõÆÂâçÁâàÊú¨Âè∑‰∏∫4Ôºâ$/;"	m	struct:ac_head_st
ver	wt/header.h	/^	unsigned char	ver;$/;"	m	struct:bg_msg_head
version	wt/header.h	/^	char	version[16];$/;"	m	struct:bg_msg_head
vlan_id	wt/header.h	/^	__u16 vlan_id;			\/\/ VLAN ID (ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_base_conf_st
vlan_name	wt/header.h	/^	__u8  vlan_name[32];	\/\/ VLAN ÂêçÁß∞$/;"	m	struct:ac_ap_base_conf_st
wds_mode	wt/header.h	/^	__u8 wds_mode;								\/\/ WDSÊ®°ÂºèÔºå0:ÂÖ≥Èó≠,2:Ê°•Êé•Ê®°Âºè,3:‰∏≠ÁªßÊ®°Âºè,4:Ëá™Â≠¶‰π†Ê®°Âºè$/;"	m	struct:ac_ap_wifi_wds_conf_st
web_port	wt/header.h	/^	__u16 web_port;			\/\/ webÁ´ØÂè£(ÁΩëÁªúÂ≠óËäÇÂ∫è)$/;"	m	struct:ac_ap_base_conf_st
week_statiscits	wt/time_task.c	/^int week_statiscits(wt_sql_handle *s1_handle, wt_sql_handle *s2_handle, wt_sql_handle *iud_handle, char* s_yesterday)$/;"	f
wep	wt/header.h	/^ 		struct ac_wep_key_st wep;		$/;"	m	union:ac_ap_wifi_base_list_st::__anon1	typeref:struct:ac_ap_wifi_base_list_st::__anon1::ac_wep_key_st
wifi_base_info	wt/header.h	/^	struct ac_ap_wifi_base_conf_st	wifi_base_info;		\/\/ APÁöÑÊó†Á∫øÂü∫Êú¨‰ø°ÊÅØ$/;"	m	struct:ac_ap_conf_st	typeref:struct:ac_ap_conf_st::ac_ap_wifi_base_conf_st
wifi_wds_info	wt/header.h	/^	struct ac_ap_wifi_wds_conf_st	wifi_wds_info;		\/\/ APÁöÑWDS‰ø°ÊÅØ$/;"	m	struct:ac_ap_conf_st	typeref:struct:ac_ap_conf_st::ac_ap_wifi_wds_conf_st
worker	wt/pool.c	/^typedef struct worker$/;"	s	file:
wpa	wt/header.h	/^		struct ac_wpa_key_st wpa;$/;"	m	union:ac_ap_wifi_base_list_st::__anon1	typeref:struct:ac_ap_wifi_base_list_st::__anon1::ac_wpa_key_st
wt_close_sock	net.c	/^void wt_close_sock(int *sock)$/;"	f
wt_recv_block	net.c	/^int wt_recv_block(int sock, unsigned char *buf, int len\/*, int block_flag*\/)$/;"	f
wt_send_block	net.c	/^int wt_send_block(int sock, unsigned char *buf, int len)$/;"	f
wt_setblocking	net.c	/^int inline wt_setblocking(int sockfd)$/;"	f
wt_setnonblocking	net.c	/^int inline wt_setnonblocking(int sockfd)$/;"	f
wt_sock_init	net.c	/^int wt_sock_init(int *sockfd, int port, int listen_num)$/;"	f
wt_sql_destroy	wt/sql.c	/^void wt_sql_destroy(wt_sql_handle *handle)$/;"	f
wt_sql_exec	wt/sql.c	/^int inline wt_sql_exec(wt_sql_handle *handle)$/;"	f
wt_sql_handle	wt/header.h	/^typedef struct wt_sql_handle{$/;"	s
wt_sql_handle	wt/header.h	/^}wt_sql_handle;$/;"	t	typeref:struct:wt_sql_handle
wt_sql_init	wt/sql.c	/^int wt_sql_init(wt_sql_handle *handle, char* sql_name, char* sql_user, char* sql_pass)$/;"	f
xyprintf	logs.c	/^int xyprintf(int err_no, char* format, ...)$/;"	f
xyprintf	wt/logs.c	/^int xyprintf(int err_no, char* format, ...)$/;"	f
xyprintf_addr_set	wt/utils.c	/^void xyprintf_addr_set(addr_set_st* msg)$/;"	f
xyprintf_bg_msg_head	wt/utils.c	/^void xyprintf_bg_msg_head(bg_msg_head *msg)$/;"	f
xyprintf_bg_num_msg	wt/utils.c	/^void xyprintf_bg_num_msg(bg_num_msg *msg)$/;"	f
xyprintf_bg_router_msg	wt/utils.c	/^void xyprintf_bg_router_msg(bg_router_msg *msg)$/;"	f
xyprintf_cer_msg_head	wt/utils.c	/^void inline xyprintf_cer_msg_head(cer_msg_st *msg)$/;"	f
xyprintf_msg_head	wt/utils.c	/^void inline xyprintf_msg_head(msg_head_st *msg_head)$/;"	f
xyprintf_portal_ac	portal.c	/^void xyprintf_portal_ac(ST_PORTAL_AC* pa)$/;"	f
yesterday	wt/header.h	/^	char		 yesterday[16];$/;"	m	struct:bg_daily_msg
zuobiao	wt/header.h	/^		char			zuobiao[32];$/;"	m	struct:bg_shanghu_msg::bg_shanghu_node
